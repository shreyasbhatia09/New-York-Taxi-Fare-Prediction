{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 243,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas\n",
    "import datetime\n",
    "import numpy as np\n",
    "import geopy.distance\n",
    "import os\n",
    "from IPython.display import display, HTML\n",
    "import random\n",
    "import seaborn \n",
    "from matplotlib import pyplot as plt\n",
    "from matplotlib import cm\n",
    "from sklearn import datasets, linear_model\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from sklearn import linear_model\n",
    "from sklearn import svm\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.datasets import make_regression\n",
    "from sklearn.ensemble import GradientBoostingRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_distance(a, b):\n",
    "    return geopy.distance.distance(a, b).miles\n",
    "\n",
    "#https://stackoverflow.com/questions/40807225/how-to-call-data-from-a-dataframe-into-haversine-function?noredirect=1&lq=1\n",
    "def haversine(lon1, lat1, lon2, lat2):\n",
    "    \"\"\"\n",
    "    Calculate the great circle distance between two points\n",
    "    on the earth (specified in decimal degrees)\n",
    "\n",
    "    All args must be of equal length.    \n",
    "\n",
    "    \"\"\"\n",
    "    lon1, lat1, lon2, lat2 = map(np.radians, [lon1, lat1, lon2, lat2])\n",
    "\n",
    "    dlon = lon2 - lon1\n",
    "    dlat = lat2 - lat1\n",
    "\n",
    "    a = np.sin(dlat/2.0)**2 + np.cos(lat1) * np.cos(lat2) * np.sin(dlon/2.0)**2\n",
    "\n",
    "    c = 2 * np.arcsin(np.sqrt(a))\n",
    "    km = 6367 * c\n",
    "    return km\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def pre_process(chunk):\n",
    "    chunk['distance'] = chunk[['pickup_latitude',\n",
    "                               'pickup_longitude',\n",
    "                               'dropoff_latitude',\n",
    "                               'dropoff_longitude']\n",
    "                             ].apply(lambda x: get_distance(x[0], x[1], x[2], x[3]), axis=1)\n",
    "    \n",
    "    chunk.drop(chunk[ chunk['distance'] == 0 ].index, inplace = True)\n",
    "    \n",
    "    write_chunk(chunk, \"cleaned_data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def clean(chunk):\n",
    "    newyork_lat = 40.730610\n",
    "    newyork_long = -73.935242\n",
    "    range_var = 0.5\n",
    "    chunk.dropna(inplace=True)\n",
    "    chunk.drop(chunk[chunk['fare_amount'] <= 0.0].index, inplace = True)\n",
    "    chunk.drop(chunk[chunk['passenger_count'] == 0].index, inplace = True)\n",
    "    chunk.drop(chunk[(chunk['pickup_latitude'] < newyork_lat-range_var) | (chunk['pickup_latitude'] > newyork_lat+range_var)].index, inplace = True)\n",
    "    chunk.drop(chunk[(chunk['dropoff_latitude'] < newyork_lat-range_var) | (chunk['dropoff_latitude'] > newyork_lat+range_var)].index, inplace = True)\n",
    "    chunk.drop(chunk[(chunk['pickup_longitude'] < newyork_long-range_var) | (chunk['pickup_longitude'] > newyork_long+range_var)].index, inplace = True)\n",
    "    chunk.drop(chunk[(chunk['dropoff_longitude'] < newyork_long-range_var) | (chunk['dropoff_longitude'] > newyork_long+range_var)].index, inplace = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def write_chunk(chunk, filename):\n",
    "    chunk.to_csv(filename, columns = ['fare_amount','passenger_count', 'distance', 'time_hour', 'year'], mode='a')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing count: 10000000"
     ]
    }
   ],
   "source": [
    "chunk_size = 10**7\n",
    "count = 0\n",
    "if os.path.exists('cleaned_data.csv'): \n",
    "    os.remove('cleaned_data.csv')\n",
    "    \n",
    "chunk = pandas.read_csv('all/train.csv', nrows = chunk_size)\n",
    "count += 1\n",
    "#display(chunk.describe())\n",
    "print(\"\\rProcessing count: {}\".format(count * chunk_size), end=\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "clean(chunk)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "pre_process(chunk)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "chunk['time_hour'] = pandas.to_datetime(\n",
    "        chunk['pickup_datetime'].apply(lambda x: x.split()[1]), \n",
    "        format='%H:%M:%S').dt.hour"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "chunk['year'] = pandas.to_datetime(\n",
    "        chunk['pickup_datetime'].apply(lambda x: x.split()[0]), \n",
    "        format='%Y-%m-%d'\n",
    "    ).dt.year.astype(int)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "chunk['month'] = pandas.to_datetime(\n",
    "        chunk['pickup_datetime'].apply(lambda x: x.split()[0]), \n",
    "        format='%Y-%m-%d'\n",
    "    ).dt.month.astype(int)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Pearsons Coefficient</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.7</td>\n",
       "      <td>1</td>\n",
       "      <td>1.737223</td>\n",
       "      <td>4</td>\n",
       "      <td>2012</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>6.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.109777</td>\n",
       "      <td>11</td>\n",
       "      <td>2013</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.811588</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>21.5</td>\n",
       "      <td>1</td>\n",
       "      <td>4.734918</td>\n",
       "      <td>23</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16.9</td>\n",
       "      <td>2</td>\n",
       "      <td>3.950192</td>\n",
       "      <td>3</td>\n",
       "      <td>2012</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fare_amount  passenger_count  distance  time_hour  year  time_part_of_day\n",
       "0          7.7                1  1.737223          4  2012                 1\n",
       "1          6.5                1  1.109777         11  2013                 2\n",
       "2          4.5                1  0.811588         17  2012                 4\n",
       "3         21.5                1  4.734918         23  2013                 4\n",
       "4         16.9                2  3.950192          3  2012                 1"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>9646.000000</td>\n",
       "      <td>9646.000000</td>\n",
       "      <td>9646.000000</td>\n",
       "      <td>9646.000000</td>\n",
       "      <td>9646.000000</td>\n",
       "      <td>9646.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>11.321514</td>\n",
       "      <td>1.699150</td>\n",
       "      <td>2.090501</td>\n",
       "      <td>13.427016</td>\n",
       "      <td>2011.724238</td>\n",
       "      <td>2.814120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9.420152</td>\n",
       "      <td>1.312497</td>\n",
       "      <td>2.215263</td>\n",
       "      <td>6.494773</td>\n",
       "      <td>1.869692</td>\n",
       "      <td>1.102884</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000148</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2009.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>6.100000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.808063</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>2010.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>8.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.356755</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>2012.000000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>12.500000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.484034</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>2013.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>124.500000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>17.819082</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>2015.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       fare_amount  passenger_count     distance    time_hour         year  \\\n",
       "count  9646.000000      9646.000000  9646.000000  9646.000000  9646.000000   \n",
       "mean     11.321514         1.699150     2.090501    13.427016  2011.724238   \n",
       "std       9.420152         1.312497     2.215263     6.494773     1.869692   \n",
       "min       2.500000         1.000000     0.000148     0.000000  2009.000000   \n",
       "25%       6.100000         1.000000     0.808063     9.000000  2010.000000   \n",
       "50%       8.500000         1.000000     1.356755    14.000000  2012.000000   \n",
       "75%      12.500000         2.000000     2.484034    19.000000  2013.000000   \n",
       "max     124.500000         6.000000    17.819082    23.000000  2015.000000   \n",
       "\n",
       "       time_part_of_day  \n",
       "count       9646.000000  \n",
       "mean           2.814120  \n",
       "std            1.102884  \n",
       "min            1.000000  \n",
       "25%            2.000000  \n",
       "50%            3.000000  \n",
       "75%            4.000000  \n",
       "max            4.000000  "
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "percentage = 0.001\n",
    "random_rows = pandas.read_csv('cleaned_data.csv', \n",
    "                            dtype={\n",
    "                                 'fare_amount': np.float32,\n",
    "                                 'distance': np.float32,\n",
    "                                 'passenger_count': int,\n",
    "                                 'time_hour': int,\n",
    "                                'year' : int\n",
    "                             },\n",
    "                              skiprows=lambda i: i>0 and random.random() > percentage, index_col=False)\n",
    "\n",
    "random_rows['time_part_of_day'] = pandas.cut(random_rows['time_hour'], \n",
    "                                             [-1, 6, 12, 16 ,24], \n",
    "                                             labels = [1, 2, 3 ,4]).astype(int)\n",
    "random_rows = random_rows.filter(['fare_amount', 'passenger_count', 'distance', 'time_hour', 'year', 'time_part_of_day'])\n",
    "display(random_rows.head())\n",
    "random_rows.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Reference: https://stackoverflow.com/questions/22258491/read-a-small-random-sample-from-a-big-csv-file-into-a-python-data-frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fare_amount</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.890199</td>\n",
       "      <td>-0.005405</td>\n",
       "      <td>0.113453</td>\n",
       "      <td>-0.007684</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>passenger_count</th>\n",
       "      <td>0.017381</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.016091</td>\n",
       "      <td>0.008638</td>\n",
       "      <td>-0.000265</td>\n",
       "      <td>0.010713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>distance</th>\n",
       "      <td>0.890199</td>\n",
       "      <td>0.016091</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.023727</td>\n",
       "      <td>0.016486</td>\n",
       "      <td>-0.026650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time_hour</th>\n",
       "      <td>-0.005405</td>\n",
       "      <td>0.008638</td>\n",
       "      <td>-0.023727</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.003175</td>\n",
       "      <td>0.958932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <td>0.113453</td>\n",
       "      <td>-0.000265</td>\n",
       "      <td>0.016486</td>\n",
       "      <td>0.003175</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.001134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time_part_of_day</th>\n",
       "      <td>-0.007684</td>\n",
       "      <td>0.010713</td>\n",
       "      <td>-0.026650</td>\n",
       "      <td>0.958932</td>\n",
       "      <td>0.001134</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  fare_amount  passenger_count  distance  time_hour      year  \\\n",
       "fare_amount          1.000000         0.017381  0.890199  -0.005405  0.113453   \n",
       "passenger_count      0.017381         1.000000  0.016091   0.008638 -0.000265   \n",
       "distance             0.890199         0.016091  1.000000  -0.023727  0.016486   \n",
       "time_hour           -0.005405         0.008638 -0.023727   1.000000  0.003175   \n",
       "year                 0.113453        -0.000265  0.016486   0.003175  1.000000   \n",
       "time_part_of_day    -0.007684         0.010713 -0.026650   0.958932  0.001134   \n",
       "\n",
       "                  time_part_of_day  \n",
       "fare_amount              -0.007684  \n",
       "passenger_count           0.010713  \n",
       "distance                 -0.026650  \n",
       "time_hour                 0.958932  \n",
       "year                      0.001134  \n",
       "time_part_of_day          1.000000  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pearson_corr = random_rows[['fare_amount', 'passenger_count', 'distance', 'time_hour', 'year', 'time_part_of_day']].corr(method='pearson')\n",
    "display(pearson_corr)\n",
    "labels = ['fare_amount', 'passenger_count', 'distance', 'time_hour',\n",
    "                'year', 'time_part_of_day']\n",
    "seaborn.heatmap(pearson_corr, \n",
    "                cmap=seaborn.color_palette(\"BrBG\", 7), \n",
    "            linewidths=.1, \n",
    "            annot=True,\n",
    "            xticklabels=labels, \n",
    "            yticklabels=labels)\n",
    "plt.gcf().set_size_inches(12,8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Visualization</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "seaborn.set_style(\"darkgrid\")\n",
    "plot = random_rows[['fare_amount', 'distance']].plot(kind='scatter', \n",
    "                                              x = 'distance', \n",
    "                                              y = 'fare_amount', \n",
    "                                              figsize=(12,4),\n",
    "                                              color = cm.inferno_r(np.linspace(.1,.5, 24)),\n",
    "                                              title=\"Distance vs FareAmount\")\n",
    "\n",
    "plot.set_xlabel(\"Distance\")\n",
    "_ = plot.set_ylabel(\"Fare Amount\")"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Reference: https://medium.com/@kvnamipara/a-better-visualisation-of-pie-charts-by-matplotlib-935b7667d77f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_fareamount = random_rows.groupby('time_part_of_day')['distance'].sum()\n",
    "plot = sum_fareamount.plot(kind ='pie', \n",
    "                    x = 'time_hour', \n",
    "                    y = 'distance', \n",
    "                    title='Total Distance traveled in Different times of the day', \n",
    "                    legend = False, \n",
    "                    figsize=(6,6), shadow=True, labels=[\"Late Night\", 'Morning', 'AfterNoon', 'Evening'])\n",
    "plot.set_xlabel('')\n",
    "_ = plot.set_ylabel('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYkAAAFiCAYAAAADXiT8AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMi4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvhp/UCwAAIABJREFUeJzs3Xd4lGXa9/HvPZMy6SQBQg2dUKUjCCLICggEsAJCBOtjeeyNVdeCgq6PvhZWUVlZFV0FBKSIKFKMIE16752QhPQ+7Xr/GBhKEtJz5545P8eRAzKZcs4Q5jdX15RSCiGEEKIIJr0LEEIIUXNJSAghhCiWhIQQQohiSUgIIYQoloSEEEKIYklICCGEKJaEhA5iYmKIjY1l5MiRl32dOnWq0h5j5MiRZGZmVsp92Ww23nnnHWJjYxkxYgSxsbF8+umnXJg9HRcXx7JlyyrlsUqyYsUK3nzzzTLdZtKkSVx//fXu13no0KG88sorJCcnA5CYmMiYMWMAyM7OZsyYMQwbNoxff/2V6dOn079/f/7+979X+nO50o4dO3jllVeK/NncuXP59ttvAfjuu+/4/PPPq7ye0iruNcrKyuLuu+92fx8TE0NqamqlPe6yZcuIi4urtPsTRfPRuwBv9dVXXxEREVFl979w4cJKu6+vvvqKU6dOsWDBAnx8fMjKymLChAmEh4czevToSnuc0hg4cCADBw4s8+0mTpzIfffdB4BSis8++4z777+f+fPnExUVxffffw/A3r17SUlJYfny5e7He/fdd+nevXvlPYliHDp0iMTExCJ/tnnzZlq1agXA2LFjq7yWsvjhhx+KfI0yMjLYuXOnTlWJyiIhUcM4nU6mTp3K9u3bycnJQSnFm2++Sbdu3Zg0aRLp6emcPHmS/v37k5KSQnBwMPv37+fs2bPExMTwz3/+k6CgIGJiYli3bh2rV69m+fLlmEwmjh8/jsVi4Z///CctWrTg+PHjvPjii2RkZFCnTh2UUowYMYJbb731spqSk5Ox2WxYrVZ8fHwICQnhnXfewel0uq+zYsUKvvjiC86dO0fv3r158803MZlMfPrpp6xYsYL8/Hzy8vJ44YUXuOmmm5g2bRrbtm0jKSmJmJgY3n33XaZPn86vv/6K0+mkYcOGvPrqq0RFRV1Wy/z58/nll1/47LPPiIuLo3PnzmzZsoWEhAR69+7NG2+8gcl09Qaypmk89NBDLFiwgLVr19K8eXNiY2OZN28eL774IomJiYwcOZJmzZqRmJjISy+9xBNPPMH111/PlClTOHDgADabjd69e/P888/j4+NDhw4dGDhwIPv27ePdd98lMDCQKVOmkJ6ejsPhIC4ujttvv50NGzbw/vvv07hxYw4ePIjdbuf111+nQYMGfPTRR2RlZfH3v/+dt956y13v8uXLWblyJWvXrsVisZCamkpaWhqvvPIKN954I8OHD2f9+vVkZGRw//33s2XLFnbv3o2Pjw/Tp08nKiqKxMREJk+eTEJCAjabjWHDhvHQQw9ht9t544032LJlC76+vjRq1Ii33nqLoKCgy16zs2fP8tprr3H69GmUUowaNYr777+fJ5988rLXaOjQoe7b/P3vfyc/P5+RI0cyf/58AKZNm8b27dtJT0/nvvvuY9y4cYCrpfTdd9/hdDqpVasW//jHP2jRokWhf7sPP/yQxYsXU6tWLZo0aeK+/OjRo0yePJmcnBySk5Np06YNH3zwAb/88gv//e9/3R8Czpw5w5133snKlSvx8/O76u+JOE+Jate6dWs1fPhwNWLECPfXI488opRSasuWLeqxxx5TDodDKaXUZ599pv7nf/5HKaXUCy+8oCZMmOC+nxdeeEGNHj1aFRQUKKvVqkaNGqV++OEH92OkpKSoefPmqW7duqmEhASllFKTJ09Wzz//vFJKqTvvvFN9++23SimlDh06pDp16qTmzZtXqN6EhAR1yy23qI4dO6rx48er//f//p/avXu3++fjx49XDz/8sLLb7So3N1f16dNHbdq0SZ06dUrFxcWpvLw8pZRSS5YsUcOHD1dKKfXRRx+pwYMHK5vNppRSasGCBerJJ590f//999+r+++/v1At8+bNUw8++KD7cR9//HHlcDhUVlaW6tu3r1q3bl2h27zwwgvq3//+d6HLH3vsMTVjxgx18uRJ1blzZ6WUUuvXr1fDhg1zX2fAgAFqx44dSimlJk2apL7++mullFJ2u109++yz6vPPP3e/3gsWLFBKKWWz2dTQoUPVrl27lFJKZWZmqptvvllt3bpVrV+/XrVt21bt2bNHKaXUF198ocaNG1fouV3tOXz00Ufq9ddfd9c3depUpZRSP/30k2rTpo3au3evUkqpRx55RE2fPl0ppVRcXJxasWKFUkqp/Px8FRcXp3766Se1adMmNWTIEOV0OpVSSr3zzjtq8+bNhR5/3LhxaubMme7nExsbq5YsWVLoNbrUpa/rhdfoiy++UEoptXv3btWhQwdltVrVhg0b1F133aVyc3OVUkr98ccfasiQIYXub/ny5Wro0KEqKytL2Ww29eCDD6rx48crpZR6++231Y8//qiUUspqtarhw4erZcuWqYKCAtW7d2914MABpZRSH3zwgXr33XeLfI1F0aQloZPiupu6dOlCWFgY33//PSdPnmTDhg2Xfarr1q3bZde//vrr3Z+IWrduTUZGRqH7bN++PfXq1QOgXbt2LF++nIyMDHbs2ME333wDQIsWLejVq1eRtdarV4/58+dz6NAhNmzYwIYNGxg9ejSTJk1yfxIcOnQoZrOZgIAAmjZtSkpKCt27d+edd95h8eLFHD9+3N06uqBz5874+Lh+BVetWsXOnTu57bbbAFeLKi8vr8TXccCAAZhMJoKDg2nSpEmRz784mqYREBBQ6uuvXr2anTt38sMPPwCQn59/2c8vdLccO3aMEydO8OKLL7p/lp+fz549e2jRogUNGjSgbdu2gOvfY8GCBaWuoSiDBg0CoHHjxtSuXZs2bdoAEB0dTUZGBrm5uWzatImMjAw+/PBDAHJzc9m3bx99+/bFbDZzxx130LdvXwYPHsw111xz2f3n5uayZcsWZs6cCUBISAi33nor8fHxDBs2rEy1Dh8+HIC2bdtitVrJzs5m9erVHD9+3D0uBJCZmUl6ejq1atVyX7Zu3TpuuukmgoODAbjtttuYNWsWAM899xxr165lxowZHDt2jKSkJHJzc/Hz8+OOO+5g7ty5vPDCCyxYsMB9G1E6EhI1zOrVq5kyZQr33HMPAwcOpHnz5ixatMj988DAwMuub7FY3H/XNM09mFzSdcxmM8Bl179w2ZXeeecd7rjjDlq2bEnLli0ZN24cCxcuZMaMGe6QuPBmf+lj7N69m0ceeYSJEyfSp08fevToweuvv17kc3E6ndx///3cddddAFit1lK94Zfm+RflQn3jx48v1fUv1Pjhhx+6u0EyMzPRNM398wvPx+FwEBISctm40Llz5wgJCWHbtm3lrrk4l3ab+Pr6Flm3Uorvv//eHYqpqan4+/sTFBTEwoUL2bJlC+vXr+fJJ5+8rBvo0ttfeZ92u73MtV74PbnwuimlcDqdjBw5kueee85930lJSYSFhRW6fXG/r08//TQOh4Obb76Z/v37k5CQ4L7umDFjuP322+nZsyetWrWicePGZa7bm8nsphpm7dq1DBgwgLvuuosOHTrw22+/4XA4Kv1xgoOD6dq1q7uv+OTJk6xbt+6yN70LUlNT+fDDD92f7JVSHDx4kHbt2l31MTZt2kSHDh2455576NmzJytWrCj2ufTt25cffviB7OxswNX3/Pzzz1fkKRbL4XDw8ccfEx4eTo8ePUp9u759+/Lll1+ilMJqtfLwww+7W2KXatasGRaLxR0SCQkJDB8+nF27dl31/s1mc7FvvFf7WUmCg4Pp3Lkz//nPfwBXuI0dO5YVK1awatUqJk6cSJcuXXjssccYNWpUoTqDg4Pp1KmTe3ZVVlYWP/74I9ddd91VH9fHxweHw1FiCPbt25effvqJpKQkwDV7a8KECYWu169fP5YtW0ZmZiZOp/OyEF6zZg2PPvqoe0xk+/bt7t+1+vXr07lzZ6ZOnVrjBv2NQFoSOpkwYUKhAdann36aMWPG8MwzzxAbG4vdbqdPnz7uwdzK9s9//pOXXnqJ//73v0RFRdGoUaPLPuVe8Oqrr/L+++8zYsQI/Pz8sNvt9OrVq9jpmhcMHz6cX3/9lZtvvhmn08mAAQPIyMhwB8Gl7rjjDhITE7nzzjvRNI369evz9ttvV9pz/fLLL1m0aBGapuFwOOjYsWOZp5G+9NJLTJkyhdjYWGw2G9dddx33339/oev5+fnxySefMGXKFP79739jt9t54okn6NatGxs2bCj2/jt37szHH3/M//7v//Kvf/3rsp/169evQq/Hu+++yxtvvEFsbCxWq5Xhw4czYsQIHA4H8fHxDB8+nMDAQMLCwnjjjTeKvP3kyZOZP38+VquV2NjYQhMcrlSnTh2uueYahg0b5g6YovTt25cHHniAe++9F03TCA4O5l//+lehDyw33HAD+/fv57bbbiM0NJQ2bdqQlpYGwFNPPcWjjz5KYGAgwcHB9OjRgxMnTrhve+utt/LGG29www03lOVlE4CmKtrWFYY1ffp0Bg0aRIsWLcjKymLEiBHMmDGDli1b6l2aEJXG6XQyefJkGjRowIMPPqh3OYYjLQkv1rRpU5566ilMJhMOh4MHHnhAAkJ4lOzsbAYMGEDXrl2ZNGmS3uUYkrQkhBBCFEsGroUQQhRLQkIIIUSxJCSEEEIUS0JCCCFEsSQkhBBCFEtCQgghRLEkJIQQQhRLQkIIIUSxJCSEEEIUS0JCCCFEsSQkhBBCFEtCQgghRLEkJIQQQhRLQkIIIUSxJCSEEEIUS0JCCCFEsSQkRKls2LCBmJgYli5detnlsbGxFTrxKz4+ntmzZ1e0PCFEFZHjS0WpNW/enCVLljB06FAA9u/fT15eXoXus1+/fpVRmhCiikhIiFJr06YNx44dIzMzk9DQUBYtWkRsbCwJCQksWrSIr776Cj8/P5o2bcrkyZNZvHgx8+bNw+l08vjjj/Pqq6/StWtXjh49SmRkJNOmTWPhwoUcOXKEMWPG8Mwzz1CvXj1OnjxJx44def3110lNTeXZZ5/FarXSrFkz1q9fz/Lly/V+KYTwGtLdJMrkpptuYvny5Sil2LFjB126dCE9PZ1p06bx1Vdf8d133xESEuLuQgoNDeW7776jd+/enDx5kieeeILZs2eTmprKzp07L7vvY8eOMWXKFObOnUt8fDzJycl8+umnDBw4kG+++YYhQ4bgcDj0eNpCeC0JCVEmsbGxLF26lE2bNtG9e3cAnE4nLVu2JDg4GIAePXpw8OBBAJo1a+a+bXh4OPXr1wegfv36FBQUXHbf0dHRBAcHYzabqVOnDgUFBRw+fJiuXbsCuB9PCFF9JCREmTRu3Jjc3FxmzZrFiBEjANA0jcOHD5ObmwvAxo0b3eFgMl38FdM07ar3XdTPW7duzdatWwHYtm1bpTwHIUTpSUiIMhs6dCgJCQnuIAgPD+exxx7j7rvv5s477yQtLY2xY8dWymM98MADrFy5kri4OObMmYOPjwyjCVGdNKWU0rsIIYrz+++/Ex4ezjXXXMOff/7Jp59+ytdff613WUJ4DflYJmq0Ro0a8eKLL2I2m3E6nbz00kt6lySEV5GWhBBCiGLJmIQQQohiSUgIIYQoloSEEEKIYklICCGEKJbMbhJex+GE3HzIK4DcAtffL/3Tar94Xe2Kv1z4/tJ1fxf+7ucLQf4QZIFAi+vPC3/3MVfxkxKiikhICI+Tb4WUTEjLguy8S8LgfBAU2Kq/Jn/fi8EReEmQBAdARAiEBFZ/TUKUhkyBFYalFKRnuwIhJRNSz/+ZW1DybWsaP1+IDHV91Q6FyDAIDwaTdAgLnUlICMPIt0JSGiSmu/5MTr+8a8jTmE1QpxZEhV/8CvDXuyrhbSQkRI1ld8Dpc3A8Ec6cg8xcvSvSX0igKywa1oYmUWDx07si4ekkJESNkm91hcLxs3DqnCsoRNE0DeqFQ9N6ri8Z1xBVQUJC6C49+3wwJEJiKsgvZPlEhl4MjMhQvasRnkJCQlQ7pSAxzRUKx85CRo7eFXme0EBoUg+aRkG9iMun7ApRFhISotqkZ8PuY3DkDORZ9a7GewT4QXQUtGoIDWrrXY0wGgkJUaWcyjW+sPsYnEnRuxoRHgIdmkKrRrLAT5SOhISoEnkFsO8k7DmmyMmXvo6axt8XYhpD+6Yy4C2uTkJCVKqkNFer4fAZhVNJONR0mgZN6kL7Zq5ptUJcSUJCVJjDAYfPwO5jiuQMCQajkq4oURQJCVFu+VbYcQT2HlcU2CQcPIV0RYlLSUiIMrM7YOdR2HZQYXNIOHgqTYM20dC9tWwH4s0kJESpKQX7Tyo27HFQYJcNhL2Frw90agHXNJduKG8kISFK5UQirNlpIzvfV+9ShE6CLNA9Blo3ksV53kRCQlxVcjqs2WEjOVPCQbhEhkKvdjIbyltISIgiZebAn7vsnEg2c8n5bEK4Na4D17ZzHZokPJeEhLhMvhU27XWw76SGkiPQRQk0DWIaubqhAi16VyOqgoSEcNt91Mn6PQqHktFJUTY+ZujcAjq1dB2WJDyHhIQgM0fxy4Z80nID9C5FGFxECPTvDLXD9K5EVBYJCS+mFGzcncP2I35gkoFpUTk0Dbq0hK6t5IxuTyAh4aVSMx38vC6XHJuMOoqqERnqalXIAUjGJiHhhTbtyWbLIX80aT2IKmYywZ03QGiQ3pWI8pJls14kJ8/BovgMsmwRaNINIKpB22gJCKOTkPASe49kEb/ThGaO0LsU4SUiQxW92soaG6OTz5MezuFQLFp9jvjdQWhm+Ugnqody2ujfyYm5uNnU2Smw9luw5lVrXaLspCXhwVLTc1nwey4Oc23Za0dUq87N8ogMK2bE2umA32dC8lE4sxf6TYSoltVanyg9Gbj2ULv2JfDHngDMfrX0LkV4mVr+qdx5U+FuTZu1gE1/rKKzXyqBh9dc/IGmwTU3Q+ehyGBZzSMh4WGUUvzy+36OpjfB7COL40T10pzZxA0JxOJ3+Zu9UorVS38k8a/fuDNaYSqqZduwHfS7B/ylW7Qmkdj2IDabje8W7+Z4ZksJCFHtlNPB4B7mQgEBcGTfbvZt/J0RjU1FBwTA6T2w+G1IOVm1hYoykZDwEFlZuXz542GyTR3QTDLUJKpfTIMsousX/nCSmZbKL/O+JbaRRqDJcfU7yU6Bpe/CofVVVKUoKwkJD3A2KZVZPyWhAtroXYrwUoHmNG7oVnj8y2G3s2zef+kcXEAj34LS3ZnDBmu+hvWzXYPcQlcSEga37+AZ5q224xPcVO9ShLdy5jHqhtAiZ9BtjF+B4+whrg3LL/v97vsdln0A+dkVr1GUm4SEQSml+GPjIVbuDMY3sK7e5QgvpZST/p2cBAcWXhBx6ughtqz6meENnJjLOwU76TAsfQ+yUipWqCg3CQkDcjgcLPx1D7sTovHxk93ThH6aRGbQuknh2Ug5WZn8NGcWQxqZCDHZK/YgmYmw9P8g5UTF7keUi4SEweTnF/Dtgk0kFsRgMvvpXY7wYn6kM6h3eKHLnU4nvy2cQwufLFr4l6ObqSh5mfDz+64ZUKJaSUgYSEZGFjO/jyfXr5vMYBK6Us4CRlwfVOR01m0b1pB6eCf9I0o5UF1a9gJYMV1mPlUzCQmDyMjI4j/fr8YUfgMm2eJb6KxXGysRYYV/D8+ePsmfvyxkZCPw0apgna7T4Zr5tOOXyr9vUSQJCQPIys7hq9mrsdS7SbqYhO7qBqfSqXXhw6oK8vJYOudrBtRVRJhtVVvEloWw/eeqfQwBSEjUeDk5uXz9/Up86/4Nk9midznCy5lVJsP6Fh6HUEqxaukC6lrP0T6wksYhSrJ1sQRFNZCQqMFy8/KZNWcFpsgbZZsNoTvltDHsOgu+PoUHIvZu38zJHRu5qW4VtyCuJEFR5SQkaqj8/AK+nbsCZ1h/zL6y4ZnQX6emudSLLNzdmZKUyMqFcxjRGPw1Z/UXJkFRpWSKTA1ktdr47ocV2IL64ONXuO9XVD4NsPhDoD8EWs7/6Q9+vmDSXLtZX/hTAUqB0wlOBXYH5BVAbgHk5p//s8D1c08R5p9Kr2uK3v7757mz6BVhJ8rHqkNl521d7Pqz08361eChJCRqGJvdzuz5v5Fr6YWvv5wFUZlMGoSHQO0w11dI4MUwsPiBqZLb1fnWi+GRnQepmXAuE85lgK2C68uqk+bMYWS/on8X1/72M5aM03StX8nTXctj62Lw8Yf2N+pdiUeRkKhB7HYH835cQYapO34WOYu6IswmiAy9GAi1w1wBYa7GDlaLn+sr/IrGoFKQlesKi3MZF4MjX8cP4sVRysGg7iYs/kVs/71/N3vXr2ZCU0fx239Xt03zIKgWNO2qdyUeQ0KihnA4HCxc8hsJuU0JiqijdzmGVKcWRNd1fUWGVn7LoLJoGoQGub6aN7h4eVYunEyGE4lw+hw4akB3Vev6WTRtULgVkZmexrIfSrn9d7VSEP8lWEKgXiu9i/EIcjJdDaCUYtHSlew9biIieoDe5RiGrxka1oEmdaFxXddYgqewO1xBcSIRTiRBTjXNKr1UgDmN8UPCC+3u6rDbmf/VZ9TPPEzfcB0KKw2/ALj5GQhvUPJ1xVVJSNQA6zZuY3n8PqJi7kSTM36vKsAfmteHJlFQPwLMhTcf9UjnMuBkEhxJgJTManhARx5j/+ZHSFDhF3j9ql85vGYpYxpZy7+7a3UICoehz7m6n0S5SUjo7PiJM8z8ZgkN2o9HMwfqXU6N1bA2tGviCgeHw8aLL77I6dOnsVqtPPzww3Tu3JmXX36ZzMxMHA4H77zzDtHR0e7b22yFbzNw4EDi4+P56KOPaNCgAR988AEmk4nJkydz77330qhRIx2fcfGS0mHvcTh8xtXiqGxKObmhYx5tmhaeen3q2GEWzvyYuKZ2Qiu6u2t1CG/galH4yTqj8pIxCR1lZmbz3zlLiGoVKwFRBIsfxDSGNtEQdsn71YIFi6hVqxb/93//R1paGrfccgu9evUiNjaWoUOHsn79eo4cOXJZSCxaVPg2AwcO5L///S8zZ87ko48+Yt++fZhMJoKDg2tsQADUreX66t0ODp52BUZqVuXdf3REBm2aFl5VnZudxdLZsxjUAGMEBEDaGYj/Dwx8mCJPRRIlkpDQic1uZ+6Cn/GP7IlPQH29y6lRGkRC2ybQNKro7qQhQ4YwePBg9/dms5ktW7YQExPDxIkTadiwIS+99FKJtwEICgoiLy+PvLw8AgIC+Ne//sVrr71WJc+rsvn5Qvumrq+zqbD3BBw5U7EBb18yGNSrcPeM0+lk+cI5NDNn0spSQ8chinNql2uxXeeheldiSNIBrgOlFCtWrSMxI5DgOp31LqfGaFYPbu8Hw3tDiwbFjzcEBQURHBxMdnY2jz/+OE8++SSnT58mNDSUL7/8kvr16zNjxowSbwPwyCOP8Oabb9KoUSNOnDhB165dWbJkCa+88gpbt26t6qdcaepFwIDOMO5v0LkF+JRjrEY5Cxh5fSDmIgYadmz8k9RDO+gfWQPWQ5TH9p9cYSHKTEJCB7v3HmT95sNENh2kdyk1QuM6cEtfuKk7RJTyoL2EhATuvvtuRo4cSWxsLLVq1eLGG12LqG688UZ27Sr8hnDlbQBatGjBtGnTePDBB/nhhx8YPnw4a9as4ZVXXuGTTz6ptOdYXSx+0LMtjBkAHZqVbRpwz5iit/9OOnOKNT8vYEQj8K2K7b+rgzo/NTbrnN6VGI6ERDVLTEph/qKV1Gs9Cs3Lz4WoFwGxveHma11rHErr3Llz3HvvvTz33HPcfvvtAHTr1o3ff/8dgE2bNtGyZcsSb3Op2bNnc8sttwCurhVN08jLyyvnM9NfoAWua+8KizbRJXfH1wlKpUtM0dt//zT7a26IUkRW9fbfVc2aCys/A3sNXLVYg8nspmqUl1/A5198jym8L/6hLfQuRze1w6BHjGttQ3m8+eab/PzzzzRv3tx92dtvv83LL79MXl4ewcHBvPfee4SFhfH888/z5JNPMnPmzEK3mTFjBhaLhezsbF5++WU++OADAF555RX27dvHXXfdxahRoyr0XGuKjBz4a79rRtSVTM4sJgwNLrS7q1KK5Qtmk39wPSOiPOiNtXkP6HeP3lUYhoRENXE6ncydv4xjSf6ERw/UuxxdBPi7Pt22kPVNuknJhDU7ITHN9b1y2ojt7aRBHf9C1927fTN/zJ/FhKZ2fXZ3rUrXjYPWffSuwhCku6marN+4jV37TlGr0fV6l6KLmMZw5w0SEHqLDIXY61xh7WOGjk1ziwyI1OQkViyczYjGmucFBMDGH2R8opSkJVENTpw8w4yZc2jQ7jbMAY31LqdahQTA9ddAI9mOqsbJyXMQFFB4GpTNZmXOv/9FjP0U3UMMNt21LOq2gJufAtnl4Krk1aliVquNeQt/Jbx+R68LiA7N4PYbJCBqqqICAmDdimX4pZ+ka7AHBwRA0mHYuVzvKmo8CYkqFr92E+kZ+QRFeU//Z61gGNnH1aXhK8s1DeXo/j3s/nMlQ6PsNWf776q07SdIPaV3FTWahEQVOpOQxO9/bKReiwFoZg/aovQqOjSD266HqMK7OggDsNttDGvqT1CN2v67CjntrvUTDoNP761CEhJVxGa3s2DRcgICLJC9HWf2PpTywAHA88wm14rf69p7z86snqhV+05Ej3ocgiP1LqX6pJ+BrUv0rqLGkpCoIus3biPhbDLhtUJB2VFZW3Ce+xlVcFbv0ipdcACMuA5a1dw98URZRDSE2EnQoK3elVSf3StcmwFW0IYNG3jqqadKff1vvvmm1NeNiYnht99+c38fHx/PpEmTAHjqqaewWotfy9KnT+Hu7vT0dBYvXlzi40pIVJEDB4/hdDqxXXqYsT0DZ+pKnGlrUI4c/YqrRA0iXVtqlGXFtDAA/yD426PQcXDJ1/UEygnrvnNt31GNpk+fXupGgqQRAAAgAElEQVTrBgQE8Pbbb5OamlroZ++//z5+fn5leuz9+/ezcuXKEq8nIVFFxo8ZwaCBfUhJSScpOZVLZxqr/BM4k5fgzN6NUsbt++3YDIZe61okJzyQyQTdRkL/+8GnbG9AhpR0GA6tr5K7XrZsGXFxce6v1NRUpk+fTkZGBq+99pr7vJNx48YxduxYNmzYUOg+goKCuOeee4rcpfjGG2+koKCA48ePM3bsWOLi4pg0aRJxcXEAWK1WnnnmGcaOHcvDDz+MzWbj008/Zf369cyePfuqtUtIVBF/fz/697uWxx+9m1YtmnDqTCJZWZe0HpQDlbUdZ/JSVP5p/QothwvjD73b19xzpEUlatoVhj0HIV4wl3nzAijIrfS7PXbsGJ9//jmzZs2iWbNmrFmzhocffpiwsDBee+015s6dS3h4ON9++y2ffPIJkydPLvJ+7rrrLrKzs4vtJnrnnXd46KGHmDVrFl27dnVfnpuby1NPPcV3331HdnY2e/fu5aGHHqJXr16MHj36qrXLf/FKlkwKRzjm/j4yohZj7xzOvXffjo+PmdNnkrBaL5lJ4cjCmfY7jtTfUfZKPDmmivj5wLBeMv7gdcIbuoIi0sPX+uRnw5aFlX63kZGRvPDCC/z9739n//792O2XH9p04MAB4uPjiYuL4/HHH8dut5OWllbofjRNY+rUqXzwwQckJSUV+vnhw4fp0qUL4Nr08oKwsDD3QVq1a9cu0+aVEhKVSKFYzR/8xK8s4mfSyQBc/7Atm0fz2MNx3DzoetLSM0lMSsHpvGS2U8FpnMk/4czagVI189Qvi5/rrId6EXpXInRhCYbBT7pWKnuyA2vg3LFKu7usrCw++ugj3n//fd588038/f3d3c8X/mzevDnDhg1j1qxZzJgxgyFDhhAWFlbk/dWrV4/HHnuM9957r9DPWrdu7T4HZfv27e7LtSK2ATaZTJe/BxVDQqIS5Oblsu/IPnY693AWV7of5yTfMpc/2YgNV8vB19eXPr278eT/TqBd25acSUgmI/PS1oMTlb0LZ/ISVN4JHZ5J8YIsrhlMtYv+vRXewi8ABj0GDdvpXUnVUQrWzyn3zdeuXcutt97q/kpOTqZr167ccsstjBs3DovF4m4FtGjRgmeffZYxY8Zw5MgRxo8fz5gxY2jYsCGmq/Tljho16rLupAueffZZZsyYwYQJE1i5ciU+PsWvZo2OjubAgQN8+eWXV30+sndTJZj363w27N1Ao/9pjmYpnNjBBNGHXrTm4icwpRTHT5xm4ZKVJCenULt2OP7+VwwO+kVhCu2O5qvvO3NwgKsFESrHcIsLHHZYPQNO7tS7kqrT/37XeIyBLFq0iE6dOtGkSRPmzp3Lli1beOuttyp0nxISFXT8zHE+m/059Yc3hlZXb5g1ogH9uI5ILvbX2O0O/tq6i19/W4PD4aBOnQjMl32C0NCCYtCCO+pySFGQxXUwUGhQtT+0qOkcNlj1bzjloUERWhdG/QNMxlkdumnTJt566y0CAgIwmUxMnTqVxo0rNo4kIVEBNruNT/77KXn+eQTdEUZpNrsxodGR9lxLd/y52HLIzMpmxap1/LV1F8GBAYSFhVzej2iyoIV2wRTQrCqeSpEkIESJHDZYNcNzz4/uNQba9NO7Cl1JSFTAum3rWLLqJ+rd1hiiy7YbWiABXEdP2tAajYu3PXkqgcVLV3L6TBK1I2thsVyxCMG3Dqaw7mi+Vbs5ksXPtUlfmASEKInDBr99Agn79a6k8gWGwa2Twcd7jxqWkCin7Nxs3p35HmHRtfCJtZR8iHAx6hHFDfShLrXdlzkcDrbv3MfSX+Kx2qzUrR2B+bINkTS0wJZoIdegmSp/JZvJBMN7ySwmUQYFufDTO5BZeFqm4fW4Ddp752mSICFRbr+s+YU1m9dS9/aG0LBieypraLQjht70JICLu8Xm5OSyKn4jGzZuw2LxIzw87PIuKM0fLbQTWkBztEo8OGVAZ1kHIcohMwmWvAPWyl+MpitLMNz2Bvh659YCEhLlkJGVwXv/+X9EtqyNaWjl/eJY8KcXPehA28u6oM4kJLHk51UcP3GayIharp1lL+Ub4ZoF5VebiurSEnq0qfDdCG919gD88pFrLyRP0v1W6PA3vavQhayTKIc1m9eiAFPXyt3PJp8CVrOG2cwngYu7xTaoX5f7J97B6NuGkl9g5czZZOz2S/Z8sqXiTPkVZ/p6lKP0Kymv1Kw+dI+pyDMQXq9ea+g9Vu8qKt/eVeA07j5rFWF+rajdokSxUjNS+eGXH6jbLgo6Vc3UuFzy2MN+MsikHlH44YumaURF1aZb1w6gYO/+w1htNgIs/he7oOxpqNzDoPmAb0SRqyyLUzsMhvRw7cskRIVERoMtH5KP6l1J5bHlQ2iUaxt1LyNvCWX0+6Z410rIzlV/Lud+DvINs9nKDpy4mu+BARYG/60v//tQHA3rR3H6TCI5OZe0HpQNlbn5/NkViaV6nEALDO4BPsaZDi5qum63QKOOeldRuXav0LsCXciYRBkkpybz4ayPiOpYD26s3ilxEYTTj+tozMVPMkop9u0/wuKlK8nKzqFOnQh8r1iGr1maoIV2QTMXvVxa01xTXevKeRCistnyYfHbnjXjadDj0MC7Bu2kJVEGqzauxsfsAx2rvhVxpVTS+JGf+JnfyCIbcG3a1bZNCx5/5G4G9OvFuXNpJJ9Lu+LsiuPnz67YU+TZFd1aSUCIKuJrgesnlHt6eI2067eSr+NhJCRK6WzyWbbv20Fks9pQR79f+kMc4RvmsIktOHC96Vss/tzYvxdPPHI3zZs24tTpRLKyLz27wo7K2nb+7IqLRzTWqQWdW1b3MxBepU4zzzrd7sweSDPW+S8VJSFRSis3rMLP1w8tRv+Oezt21vMX3zKXY1zcLTYyMpxxY0ZwT9ytmE1mTicUdXbFahyp8Zic2QzoLIcGiWrQaShEeNDCm72r9a6gWslbRCmkZqSy59AeIupEoJrWnKZzBpksZhmLWUYGmYCrC6pVy6Y89nAcgwf2JS09k6TkK8+uOEXP5qepFaxT4cK7mH2g7wQwVX83bZU4uhnsVr2rqDYSEqWwdc9WNJMJraUZfGpOSFxwjBN8y1zWsQkbrgOL/Px8ub5Pd554dAIxrZpzJiGZzEzXWEbDBlF0bN9az5KFt4loCF2G611F5bDlw7EteldRbSQkSmC1WVm3bT2RYRGoVjUvIC5w4OAvtvItczjEEffl4bVCGX37UO6feAf+/v4kn0ujf79ry7SGQohK0f5vULe53lVUjkPr9K6g2sgU2BLsPLCT73+aTYPODXEO0H88orQa05B+XEcEF3eLtdntpKVlULdOpI6VCa+WmQSLpnpAd40Gt70OIRXfCqemk5bEVSiliP/rD0KCQnC2NtZLdZLTfMc8/mAdVlz/IX19fCQghL5C67paFIan4KB3tCaM9c5XzU4nnuZM0hmC64ZAfb2rKTsnTraxk1nMZh8HUEijUdQAHf4GlhC9q6i4w+s9byPDIkhIXMXGnZvw9fGF1qZSnTpXU+WSxyGOXrazrBC68bVA52F6V1FxOWmQcEDvKqqchEQxsnOz2bZ3G5Fhkagmxn5z1dC4jp56lyHERa37QFiU3lVU3PGteldQ5SQkirFj/06cyomprhmCjB0S7Whz2QC2ELozmaHbKL2rqLiTO8DD5/5ISBRBKcWfW/+kVkgtVGNjB4QPPlxLN73LEB5k+/btxMXFAbB7926uv/564uLiiIuLY+nSpUXeZvny5TzzzDPu7+fOncudz07htfgE92XPLNxFdoG9aouvbLkZcO6Y3lVUKQ9ZAlm5ElOSSM/MoEHd+jgMHhJduYYgit4BVoiymjFjBosWLSIgIACAPXv2cM8993DvvfcWe5s333yTNWvW0LZtW/dlCxcu5Pvvv+fRB+4hI8/G1tMZdGtci2B/A74lndju2qPKQ0lLogj7j+5H00CFAyHGDYkALHThGr3LEB4kOjqaadOmub/ftWsXq1evZty4cbz44otkZ2cXuk3Xrl258mwzi8VCQUEBdpMfpibXMG/HGe7s3KCqy68ax7frXUGVkpC4glKKzbs2ExYSZviupg60w4/KPWJVeLfBgwfjc8mZJddccw3PP/883377LY0bN+bjjz8udJuhQ4cWWuH/0EMP8fTTTzNo0CAWnVTcdk0D/r3+BK8u28eRlJxC91GjZSZC+tmSr2dQEhJXSE5NJjUzlQD/AFS0cUPChEYH2pZ8RSEq4KabbqJDhw7uv+/Zs6dUt+vevTvTp0/n5ptvZvP+Y0Q3a0FSVgFP9GvOx2sMeOzpiW16V1BlJCSucOD4QUCDWhqEGjckWtCcYIL0LkN4uPvuu48dO3YAsG7dOtq3b1+m23/22Wc88MAD5DfqjMnkmq6dayt8OFaNd2af3hVUGQmJS7i7moJDDd2KALiGsv1nFaI8XnvtNaZOnUpcXBxbtmzhkUceAeDee+/Far36/kynTp0iMzOTtm3b0ubGUSRk23lwzjbGdzPg2RPJR8FhK/l6BiQb/F3iXFoKH3z1AfXr1Mc51AzhxgyK2kQyltv0LkOIstm8EHb+oncV5TfkKajXSu8qKp20JC5x8PgB1wCbvwYGPve5Ex30LkGIsmvTDzQDvyWdPah3BVXCwP8ilW/z7i2EBIVAHQx7eLsFf1rTQu8yhCi7oHCI7qR3FeWXKCHh0bJysjh77ixBAUGousYMCID2tMFH1kgKo2rbX+8Kyi/pCDgMtmK8FCQkzjuTlICGhqZpqDrGDYkYPK9PVHiReq0g0KD7jDlsHrlFh4TEecdOH0XTTCgzEKF3NeUTRiiRRi1eiAsM3eV0SO8KKp2ExHkHjh0kJCgYamPYsyOa01TvEoSouGgDbyWTekrvCiqdhASQm59LUkoSgZZAQ49HSEgIj1CvFfgF6F1F+UhIeKazyWdR4BqPMGhIBGChHnX1LkOIijOZoVFHvason6xksF99EaHRSEgAJxJOunZ9NQGReldTPs1ogkn+OYWnMOq4hFKQelrvKiqVvKvg2ho8OCAYwgEfY7YkpKtJeJSGbcFs0KncaZ7V5eT1IWG1WTmVeNq1PiLMmAHhiw+Naah3GUJUHl8L1DfoLsYeNi7h9SGReC4RAJPJBKE6F1NOjWgoC+iE52ls0O1lJCQ8S2JKEko5AQzbkpABa+GRajfVu4LyyUzSu4JK5fUhcSY5AV+f86e3GbQlUZc6epcgROULb2DMcYmCHLDl611FpfH6kDiblECAn8U1s8mgZ/TUpbbeJQhR+UxmiDDg2RIA2al6V1BpvDoklFIkpiRi8bdAMIZcaR1GKBYsepchRNWIbKp3BeWTnaJ3BZXGq0MiNy8Xq83qOthdupqEqHlqN9G7gvKRloRnSMtMcx0yBCiDnmcdJSEhPFntaL0rKJ8caUl4hPSsdNynt0pLQoiaJzQKfPz1rqLspCXhGZJSkg3fkqhj1H1EhCgNkwkiDdiakJDwDAnJZ7D4nR/0NeCmk6GE4Ief3mUIUbXCG+hdQdkV5OhdQaXx6pA4e+78zCYAA7Zog406Z1eIsgispXcFZWfN1buCSuO1IeFwOEjPTMffz9+1RsKAG/sFSUgIbxAYpncFZWfN07uCSuO1IVFgLQBcZ0gYsRUBEESg3iUIUfWMGBLKCbYCvauoFF4bEvnWfDg/aG3Ubn0JCeEVAgwYEuAxrQnvDYmCfPfMJuO2JKS7SXgBI45JgMeMS3hvSFgLgPNrJKQlIUTN5R8IZl+9qyg7aUkYW0FBPsrpCgnlb7xBa5CQEF7EiOMSHrITrNeGRH5BPhcWWxu3JSHdTcJLGHFc4vw5NUbntSGRk39Jf6EBxyRMmPDDgE1wIcrDEqx3BWUnIWFs2TnZ+PiYXd8Y8FwTs/f+0wlvpBnw993dVWFsBnx7rBzZudn4XDj1yoD/lpqEhPAi+5wRJFvr6V1GibLS0xgQexsBAYHGPX71Cl4bEjkGDwkTxhxsF6I8UgnipDNE7zJKdC43i34NO0KoAcdQiuG1IeFwOi+ukzAgaUkIb5KdmUHSmdN6l1Ei5XTidHrGWMQFXhsSmqZdPEvCkP+mBmz+CFFOHbr1JLp5S73LKJGvvz8hYQZd/FcMrw0Jk4FbEQBOCQnhRRpEN6NBdDO9y/BKXttnoZlMF1sSBny/dRqz+SOEMBivbUlol06pq+Eh4bA5WPniL2SezsRhddDj4Wup07IuYyeNRdM0WrVqxauvvorJdPE5ZWVl8dxzz5GdnY3NZmPSpEl06dKFuXPnMnfuXNq1a8drr70GwDPPPMPrr79OcLAB56ILIaqU14aE2aShMEZLYv+ivVhqBXDT/w0lLy2P2bfMonabOrz+5Kv0urYXr7zyCitWrOCmm25y3+Y///kPvXr1YuLEiRw5coRnnnmGBQsWsHDhQr7//nseffRRMjIy2Lp1K926dZOAEDVbxmGwZeldRcmCGkBAXb2rqFReGxIaphofDhe0HNKaloNbu783mU0k706ifc8OAPTr14+1a9deFhITJ07Ez8+134jD4cDf37Ws3GKxUFBQgN1ux2QyMW/ePN5///1qfDZClENCPOQn611FyRoM8LiQ8OIxiUtaEjW8e98vyA+/YD+s2VaWPb6Ya5/sg1KKXM21y2RQUBBZWZd/ygoNDcVisZCcnMxzzz3H008/DcBDDz3E008/zaBBg1i0aBG33XYb//73v3n11Vc5cuRItT83IUrFlq13BaVj8AkxRfHakDBp2sWWhFXXUkolKyGTBXfPIWZkW2Ji26KZNHJw7T+Vk5NDaGhoodvs37+fiRMn8tRTT9GzZ08AunfvzvTp07n55pvZvHkz0dHRJCUl8cQTT/Dxxx9X63MSolScdnAYZdttz3tL9bxnVFqa6WJLooafMph7LodF987juueup93tHQGo064uGzZsACA+Pp7u3btfdptDhw7xxBNP8N5773HDDTcUus/PPvuMBx54gPz8fEwmE5qmkZvrGYekCA9jz9G7gtLz5pbE559/Tt++fSkocL2j7tixg2HDhvHee++xadMm9u3bV+oHjYmJ4bfffnN/Hx8fz6RJk8pQdsVZ/PzcKyO1gpo9OPHXpxsoyMxn0yfrmR83m/lxs+n1ZB++m/Yto0ePxmazMXjwYADuvfderFYr7733HlarlSlTphAXF8fDDz/svr9Tp06RmZlJ27ZtadOmDQkJCTz44IOMHz9er6coRPGM0tUExtyIsASaUqXbqjA2NpbevXvTpk0bbr31Vj755BNCQkKIi4tj0qRJDB06lH79+pXqQTt37kzt2rWZM2cOERERxMfHs3TpUt5+++0KPZmyWLVhNas2rKZe7ShULXAONVfbY1eWdsQwkMKtBCE8Svp+OLZQ7ypKp+lIqBWjdxWVqlSzmzZs2EB0dDRjxozhueeeo2XLlvzwww/4+vpis9n4448/2L17Ny1btmT79u18+eWXmEwmunXrxrPPPsu0adPYunUrubm5TJkyhaCgIO655x5ee+01Pvroo8sea+3atXzwwQf4+/tTq1Ytpk6dSmhoKG+//TabN28GYPjw4UyYMIFJkybh5+fH6dOnSUpK4u2336Z9+/aleuLBgUE4nHbXNzW8u6k4F8YkhPBoRmpJ+AToXUGlK1VIzJ07lzvuuIPmzZvj5+eHUopbbrmF2rVrM3bsWA4cOMDQoUMJDAxk2rRpzJs3j4CAAJ577jnWrl0LQPPmzXn55Zfd93nXXXexYsUKFi9eTFiYa8dEpRT/+Mc/+O6774iKiuKrr75i+vTp9OzZk1OnTjFnzhzsdjt33XUXvXr1AqBBgwZMnjyZOXPmMHv2bCZPnlyqJx5gCcB0oWmYDzgVmIzVn5iDgfpqhSgvI4WE2fOOFC6xAy0jI4P4+Hi+/vpr7rvvPrKzs/nmm2+KvO6JEydITU3lwQcfJC4ujsOHD3Py5EkAmjW7fN8VTdOYOnUqH3zwAUlJSQCkpaURHBxMVFQUAD169ODgwYMcPnyY7t27o2kavr6+dOrUicOHDwPQtm1bAOrVq4fVWvppShZ/i3uQSVO4gsJgMsi6OPguhKeyputdQel5YEuixJC4MJd+5syZfPHFF8yZM4e1a9eSmprqvs6FHVUbNWpE/fr1mTlzJrNmzWL8+PF06tTJ9UCmwg9Vr149HnvsMd577z0AwsPDyc7OdofGxo0badq0KS1atHB3NdlsNrZu3UqTJk3cj10eAf4Bl5/IYJQZdpewYSOdDL3LEKJq5Z7Vu4LS88aQmDt3LiNHjnR/HxAQwKBBg5g7d677sk6dOvHuu++SlpbGxIkTiYuL44477iA+Pp6mTZte9f5HjRpF165dAdcb/ptvvsljjz3GmDFjWLduHY888ggDBgygUaNGjB49mtGjRzN48OBSjz0UJygg6PLP4Abt3k/EAKtQhSgvey5YDfJByOzv3bObPI3NZuO1jyfToE59NE3D2V1DtTbeP3AnOtCP6/QuQ4iqkXkUjswt+Xo1gV8taPeg3lVUOuO9K1YSX19fLP4WHA6H6wID7B1WlCRpSQhPlpugdwWl5+N5g9bgxSEBUCs4DKvdNditpRuzQZXMOTlbQniuPBmP0Jt3h0RY+MUZUQbp9rySHQeppOldhhBVw1CD1kF6V1AlvDokGtdrSF6Ba1qTlg/kG7M1IYPXwiPZso21RsISrncFVcKrQ6JuZNTlFxhoOvalZFxCeCQjtSIA/CP1rqBKeHVIRNaKuGzXRi3DmC2JU5zRuwQhKl/2cb0rKBuLhITHiQiNQCmFexawQVsS6WTIuITwPBkH9a6g9DQz+IXpXUWV8OqQ8PX1JSIsgnyra08Oo85wAjjCMb1LEKLy5CWCNVPvKkrPP9wjF9KBl4cEQKOohuTln9+TIwMw6NpCCQnhUTIO6V1B2fhH6F1BlfH6kGhcrxH5Vtde4ZodjLqxaiLJZBu1eCGuZKSuJvDY8QiQkKBOZB3XedfnaSnGbEkAHMVgA31CFKUgHfKS9K6ibKQl4bkiwiK4bPuqRP1qqSjpchIeIdNgXU0gLQlPViukFiaz2b2Hk5Zo3JbEKU5TYNRj9oS4wGhdTZpJQsKTmUwmmjaIJjvXtbJTywJyjBkUThRHOaF3GUKUny0Hsk/pXUXZBNQDk6/eVVQZrw8JgLYt2pGTf3HQ18itiV3s0bsEIcovZTsY7bTF4EZ6V1ClJCSA6PqN0S49p87A4xIJJJLEOb3LEKLslANStuldRdkFNdS7giolIQFERUbh6+OL3W4HQDtrsE8yV9jBLr1LEKLs0g8aa0O/C4KkJeHxzGYzLaJbkJXrOnlIywMyjRsUBzhMnhEP7Rbe7dwWvSsoO0ttjz1H4gIJifPatmjj3jYcjN2acOBgD/v1LkOI0stLhByDDViDx3c1gYSEW6OoRpeNSxh58BpgB7vlxDphHMlb9a6gfDy8qwkkJNxqh9fG4m/Bajt/Ut1ZwGHcoMgmR1ZgC2Ow50GaQWflBTfWu4IqJyFxnslkIqZZa7Jyzo9L2AADncFelO0ygC2MIGUHKLveVZSdbyj4hepdRZWTkLhETLMYrNaLK5a148ZtSQCcJoGTnNa7DCGK5yiApI16V1E+YS30rqBaSEhcomnDpqBpOJ2uvnztlAKbsYNiLetRRlucJLxH4gZwGHQmXlhrvSuoFhISlwgJCqF54+ZkZrsOO9EcoJ029htsMikcwIAbpgnPZ82C5L/0rqJ8zAFeMR4BEhKFdGvflZz8XPf32jFjhwTAOjZhx4B9vsKznf3DmGMR4Opq8tCT6K7kHc+yDFo2aYnZZMLhdO0KSwJQYOygyCKbHezWuwwhLspLglQDT6zwkq4mkJAoJNASSNvmbUjPzABAU6CdNHZIAPzFVvLJ17sMIVzO/K53BeVn8oWQpnpXUW0kJIrQpV0XCqwX31A9ocupACt/YdAFS8KzZB2DrKN6V1F+oc3B5KN3FdVGQqIIzRs3x8fHx73hH0lArvGDYju7ySBT7zKEN1NOOLNa7yoqxou6mkBCokh+vn5c07ojaZlpAGiAdtj4IeHEyW+slu06hH4SNxjv/OpLaWZXS8KLSEgUo1ObTtjsNvf32kFl6G06LjjDWVmJLfSRmwhn1+pdRcWEtQSzv95VVCsJiWJEN4jG4h9AwfkV2Fq+Z4xNAPzJRlJI1bsM4U2cdjjxExi9FRvZWe8Kqp2ERDF8fXzp0/U6UjMuvplq+z0jJJw4Wc5qHEb/DyuM4+wayDf4iYn+ERDSRO8qqp2ExFV0bd8VNA2Hw7VmQksHDHzOxKWSOcdfGPCQF2E82aeMuz/TpSI76V2BLiQkriIsOJQubTqRkpHivsy0z3M+fW9iK4kYeBBR1HwOK5xYqncVFaY0M0R00LsMXUhIlKBX517Y7TaUOt+COIOhjza9lEKxnNWyZYeoOmdWgzVd7yoqTKvVxuOPKS2OhEQJ6tepT5OGTUnPOr8CG88ZmwBII51VrNG7DOGJ0vZCyja9q6gctb1vwPoCCYkSaJpGv+79yM3PuXjZEWX4/ZwutY8DbMZD/jOLmiHnjEd0MwFgqesVZ1kXR0KiFFpGtyA8NJzcPNfusJrj/LoJD/InGznCMb3LEJ7AmglHF4By6F1J5ajtnQPWF0hIlILZbKZ/jxtIz7rYt6rtVZDvWUHxCytJLJCBbFEBDiscnQ/2nJKvawDKbIHw9nqXoSsJiVLq0LoDvr6+WG1WwHUGtrbHs0IiY3sqmzf8dXGQXoiyUE44vsTY225cQavbA8x+epehKwmJUrL4W+jXvR/n0i8uCNIOKMg2/huqUoqM39PoVdCdIX2HoGma3iUJIzoTD5mecwqiMlmgdle9y9CdhEQZXNupJxY/C/kFrm3ENSdoO4wdEsquyFiSwvC6Q+jfsz8mk/xKiHJI2QHJHl7seqcAABsbSURBVLBg7hJaVA+v26epKPKOUAaBlkBu6nPTZYvrtGMKUo0ZFM5cJ9k/phHX9S46t/XuwTlRAekH4OSveldRqZwmf2lFnCchUUZd23ahVkgY2bnZgGvdhGm78VZh21Nt2H/K44Eb76Npw6Z6lyOMKuMgHFuE4Tfuu4Kpbk9pRZwnIVFGvr6+DO03lPSsDPcAr5aAofZ0KjiRT1C8H/8z7AHqRNQp8foZqYnVUJUwnIxDcGwhnhYQTpM/1JFWxAUSEuXQtkVbGtStT0Z2hvsy01YnGGBWUO6uLKL31mPisAkEBwaXeP1DO9fi3DsTTv1miOcnqkn6ATj2o2tGk4eRVsTlJCTKwWQyMbTfzWTnZl9sTaSBdrzmvokqpchck0a3zE7cftPt+PlefVqf0+lk958LaZj3B+FBZji3BU7+7JFvCqKMUne5WhAe+LsgrYjCJCTKqVmjZrRu2ury8yY218wFdsquyFiWypDwmxjYe2CJM5hsNiu7Vn1FjP8+AvwuuW7qLlf/s1M2BPRayVvOb7dR837PK4OpXh9pRVxBQqKcNE1jcN/B5Bfk43S6PlFpBaBtqVn/eZx5TrIWpTKuw2i6te9a4hqI3Nwc9q/8jI4RSfiYi7huxgHXilpHfhVVLGokpVxHj57+Te9KqozDN1xaEUWQkKiA+nXq061DN5JSL64wNR1TcKZmBIUj3Y5tSQ7333AvzRuXfHh7WkoSp9d8QoeovKuHSdYx2D8L8gx+0pgoHUeBa/zB6OdTl8DcZAho8pZ4JXlFKmhwn0H4+1ncm/8BmDY6waZvUFhPF+C3wsSDNz9AVGRUidc/e/IQOdu/oFXdUtZtTYODsyB9fwUrFTVafiocmOWa6urBbMEtIbix3mXUSBISFRQUGMSov40kJSP14iB2Lmhb9QuJvL051NsRyX2x9xAaHFri9Y/s2YDvsbk0ijCX7YGcNtcAZkK8Rw5ier2MQ3DgayhILfm6BuZQZnybDNK7jBpLQqIStGvRlo4xHS7rdtIOKUis/qDIWp9Oh3NtGDNoNP5+Vx+AU0qxd8NSojJXERlSxoC4VOJ6ODIP7DJO4REujD8cnQ9Oq97VVL36fcC35Ong3kpCohJomsawG4ZhNpsv7uvE+W4ne/UEhXIo0n85x8DA/tzcdwhm89Xf9O12GztXf0NLn50EWSrh1yDrqOtTZ15yxe9L6MdR4DoLwsPHHy6wmkIxR/XUu4waTUKikoQFhxLbfzjJaecudjtlgbaz6kNCFTjJXJTKna1v59prepY4gyk/L5e9Kz+nQ60z+BY1g6m8rOlw8BtI3iwL74wo+yTs/9qjdnItiW+zoTJYXQJNyeEBlcbpdPLVj19zPOEEdcNd210oDZx/M0Gdqtl+25Fhp+CXHO4eMJ76deqXeP3MtBQSNv2HmLpVPIYQ1BAaDwFLZNU+jgE5HA5efvlljh49itls5q233iIn5/+3d+/BUdb3Hsffz7PX7Gazm+zmRsIlIZGLXIp45KKABS8Fe7HU2lZrL7T01COdccZOre2MSC1qb8McOz1nLLXTFm1p0QNatVRt0SIUlPs1KIGQkA3Z3JNN9vo8z/ljQ2KENSCQ3Wy+r5mdLLubze+ZhOezv9v36WblypWYTCbGjRvH6tWrz9nPcvvtt+NyuQAoLS3l8ccfZ8OGDWzYsIHJkyfzyCOPAPDAAw+watUqsrMvcAhFi4D/zcy5HvUFijorsFYuTXUz0p451Q3IJKqq8plFn+a///AkkWgEm9WGYoD6lo6+WAX75Q2KWEMUyzaFby/+Fm6Xe9DXB+prCFetZ0LBEHxy6q6HY7+DorlQcB0olzDnkWG2bNkCwPr169m5cyePP/44qqpy3333sWDBAh544AHeeOMNFi5c2Pc9kUgEgHXr1g14rxdeeIH169dz33330dHRwd69e5k5c+aFB0RndaKCa6zr8hzcMBE1rFjLFqe6GcOC9LMuszx3HovnLybQ1tQ/7BQCdZsO+uXrtIXe68a3y803P7XsggLi1LE9KNV/Yox3CH/lhgYNWxNLKHukSOBZN910E48++igAfr8fn8/HpEmTaG9vxzAMuru7MZsHfn6rqqoiFAqxbNkyvvKVr7BvX+JTv91uJxKJEI/HUVWV559/njvvvHPwRsR7EleRO/H8iAsIANO428CclepmDAsy3HQFaJrGH15YR019zYA9CvpkBeNjl36SDu7q4OquiSyZvxiz6cM7g4ZhcGzXq5TE9+LKSuVnAiXRoyiaC6olhe1IHw8++CCvvfYaTz75JO3t7fzoRz8iLy8Pl8vFM888g83Wvzrt2LFj7N+/n89//vPU1NSwfPlyNm/ezL59+3j66adZuHAh0WiUkpISqqqqaGho4Ktf/Srl5efZRNl2NFGwUQsN4dGmj6C1nOzJd6S6GcOGhMQV0tXdxa/++L9gGH17FQxAX6BCyUcbdjJ0g84trSzMvZE5M2YPOkGtxeMc3vYXJjrrsJrT5JKkVg8UXQ+5k2TCEGhqauLOO+8kFAqxbt06KisrefbZZzl+/DgrV67se100GkXXdex2OwB33HEHv/zlLykuTsxDBYNBHn74YVasWMEzzzzDihUrWL16Nb/4xS/6f1h3Q2JPS/DUkB5jOumJW3HM+K8Rf93qiyH/S68Ql9PF3Z/8EsFQkGgssdZcAdTt+ke6LrYRNej4awufG3c7c6+ZM2hARCJhDm9ZyxRXGgUEJFZA1b6cmK9ofzfVrUmJTZs28dRTTwGQlZWFoih4PJ6+eYSCggI6OzsHfM9zzz3HE088AUBjYyPBYJD8/P5rgTz11FMsX76ccDiMqqooikJPT28VgFAATvxfYof8CA4ITQdLxVIJiIskPYkrbMf+HbzwjxcpKSjpW61i5IJ+iwoXuPxUD2qE/tbFl+fdRWlR6aCv7+po4/SO3zKpULuktg+JrCIovgFyBq8tlSl6enp46KGHaG5uJh6Ps3z5cjweDz//+c8xm81YLBYeffRRSktL+d73vsf999+Pz+fjoYcewu/3oygK3/3ud7nmmkQxutOnT7N27VpWrVqFrut85zvfIRAIcP9/fYPry2LQfjTFR5weOrNnkFNxc6qbMexISFxhhmGwYfNzHHz34IAlqvp4BWPW4B25WCCK6U2De265mzx33qCvbzpTR/ehPzLOl0a9hwvhLIXieVI/53KIdsCZ7YnS7hla0vtitcdz8Mz8TxikBy7OJSExBEKREE+t/zXBnuCAE70+S8EYnzwowid68B5088Vbv4DD7hj059S9dwCr/2UK3cN4uWn22ES55pzxMmdxsXoaE3sdWg8lVpYJAMIxBcvUb2GyD74KUJxLQmKIBFoC/OqP/4M7243dlph8NBTQb1Sh+NxPN8G9nUxsGc8nb/wkFvOHrwYyDIP39m6hMLwTt2MYB8T7WbLBOx3ypoHVlerWpC8tCu1ViXDoOZPq1qSduGYQKfkMzqKJqW7KsCUhMYQOvnuQP770J0blj+qrrWSYQb9ZhdxEUBi6Qeebrcx33cC8mTcMvoJJ0zi67Xkqsk5gt2TiJ28l0avwTQdXmfQuzgo19fYaDo+MInwfUaP1YxROlgqvl0JCYggZhsHmrZvZuustSgpL+gLAyEpMZBtW6PhbC7dP/BRTr5o66PtFIxGq/vUHrva2YlJHwFirJQe80yB3Mtg8qW7N0NPCifLdLfsTO9rFhzrVnceYud8Y9IOW+HASEkNM0zT+/Lc/c6T6KMW+4r4/4Ha1A0wKX77+S4wZNWbQ9wl2dlD7798yuTB2pZucnmxecI9P9DKcJZnbwwi3JEpndFZD8DQyEX1h/J0WCubch9kiy10vlYRECkSiEX6/6Q/4G/3k5+UTaA3gcXm45zP34MsdvCBeS8BPx4F1lA+3FUxXiskGrvJEYOSUDe9yC3ocuk9DR28wRNtT3aJhp7Ub7NOW43DlpropGUFCIkWCPUHW/uU3+AN+JpRP4EtLvojT4Rz0+/wnj6Kc2kSxJ0MmqC87BZyjEr2LrMLEzZabvksfY0EINSZWJvWcgWCtzDFcgp6oTrj0DvJGVaS6KRlDQiKFWtpbOFpdxaxp12GxDL6C6fiBreQHt+FxSkBcFNUKWQWJwHD0BofdO/RDVNGORBiEAv3BEA8ObRsyWFwzCGTPY9SEualuSkaRkBgGdF3n6I4XKDcfI8uaoWPvQ00xJSbCLc7EzZzdez8bzM7++6otESbJeiKGlhgiinVDvDvRM4h1J07+ffe7E5VWtcjQHuMIYhgGNfFKyv5Drg9xucn1JNJcLBrlH5s3ojUfYtIM2S9w2RgaRNsStwulqCTKnRlg6Mgkcvo42p7PpBs/m+pmZCT5WJrGerqDbPrL76g6tJ82I59ddVJiO6UMHYx4725mCYh0sc9vp/KGL8tS1ytEQiKNvfryc9SdOkF+UTGqqnK8xcI+vwSFEGftrlWomPc1LLLU9YqRkEhj02fOQVUUYtH+sewjjRaONMoooRB7aqFywXKyXTmpbkpGk5BIY2XjJ7D49i/S1tJMLNa/LHKf38rBBgkKMXLtr9MZP/+b5LhH4M77ISYhkeYmTJ7OosWfpSXQSDwe73v84Bkre+tl6EmMPAdPa4yZ+w3cnsFL54tLJyExDEydcR3zFy2hubGBeKy/DMfRgIW3ay3oMocqRohDpzVGzVpGrjd/8BeLy0JCYhhQFIWZs+dz462fpjlwhli0f+jpeIuFHaesEhQi4719IkbhdV/Dm1+Y6qaMKLKZbpg5vH8Xr770HB6vD1vvdSkASt1xrh8XxSSxLzKMrhtsORplysJlFBaXpLo5I46ExDD07tEDvLLxT+R4crFn9V+xrsilMb8sglmqdogMEdMMNh+IcO0tX6O4ZPDqyOLyk5AYpk4er+LF59aR7coh632FAX1OjfnlEeyy+EkMcz0Rg1eP6Nxw29fxFRSlujkjloTEMHb61Ak2/vl32LOycGb3l+xwWnUWlEfwZMmvVgxPbd0ab1TbWfSZr8sy1xSTkBjmGupr2bj+t5jMFlw5/Rd6N6sGs8dGGePRUtg6IS5eQ1ucXQEfN33q7gG9ZJEaEhIZoKnRz6a//J5IOEyu1/e+GjYGU4riTC2Kpe3lFIR4v6P1Eer0Cj7+ic9JqY00ISGRIYJdHby88U80nD6FrzBR6+msEnecuWOjWGRCW6QpTYcth4LYSmczd8GtmEzyx5ouJCQySCwW5c3XX+bA7h14CwoHfBJz23Xml0dw2eTXLdJLVxhefKeDSbOXMOPauVLNNc1ISGQYwzA4sGcHW/7+Itk5bhzO7L7nLCaDG8ZFKM7RU9hCIfqdbNJ4/XCERbd9gfLKSalujjgPCYkMdfrUCf76/DoMwJPrfd8zBpMK4kwrjsnGO5EyugHbqkLUhnJZcvtd5Ob5Ut0kkYSERAZrb2vhpeefoaU5gK+gaEA33mPXmTMuQq4skxVDrDsKL+3qIH/8dcz7+GIsVpmgTmcSEhkuEgnzj79tpOrwfvK8+Vhttr7nVMVgenGMCQVxVBkGFkPgRJPGPw+HuOHmzzFh8jSZfxgGJCRGAF3XOXpwL//8+yZMJhPuXO+A/5wF2RpzxkZxWuVPQVwZoRj881A3zVE3n1x6txTpG0YkJEaQttZmXn3pOfynT+H1FWC29F+PwqIaXDs6SlmebL4Tl9fxJnh1Tyvlk67h47d+ekBhSpH+JCRGGC0eZ+8729j2xt+xZTnOKXkw2hPn2tIoWXI9I3GJuqMK/zjcQ12zzo23fprJU6+R4aVhSEJihGpsqGfzi3+mrbUZb37hgM1LZtVgalGMq/LjsgJKXDTDgKpGeH1vC2Mrp/DxWz6FK0fqLw1XEhIjWDQSYcfW19m1cysutxun0zXg+RybzszSqOyrEBesM6zw2sEggaCJRZ+4ncqJU6X3MMxJSAhqa47z2kvP09XVQa43H4tl4FhTqTvONSUxsmW3tkgiHIM9tQY7j7Uy8eprmL9oyYDKxGL4kpAQAMSiUfbt2s6/t76Oqqh4vL4B9Z9UxWByYZzJhTHMMgQlesV1ONpo4q1DrZisDm6+7XOMGz9Beg8ZREJCDNDR3spbWzbz7pEDOF05ZLtyBjzvsOjMKIkxxqNJZdkRTDfgZIuJrVVB2jrDTL9mFnMX3DLgSokiM0hIiHMYhsHpUyf459830drcRK4vH6vVNuA1brvOlCIJi5HI36my/b0IdWe6GFt+FfMWfoL8wlGpbpa4QiQkRFLxeIxD+97hrS2b0XWdPF8+qjqwhLPbrnN1b1jIru3M1tytsqtG5+ipVnz5xSy4+TZGjx0vQ0sZTkJCDCrY1cmOra9xeP9uVJOJXK/vnLDIsSXCYmyuhEUmMQyo7zBxsB6O1bbgcGQzf9ESKidNlWs+jBASEuKCtbU0sWvHvzhycDeqasKT5zvnROGy6VxdGGNcnoTFcKbpcLLVxOEGlZr6ZkwmE7Pn3cS0GbMG1P8SmU9CQly0ttZmdu/cyuF976CoiZ7FB8PCadWp8MYp98Zl9/YwEonDe81mDtXrNDa1oSgqH7t2DjNnzZMlrSOUhIT4yNrbWtizcysH972DoqjnDQtVMSh1a1T44hS5ZFNeuuqKKBxrMnO4Lkpbewc2m51rZ8/n6unXDrhwlRh5JCTEJetob2Xv29s4sGcHBuD25GI9TxE3l02n0henLC+OzTz07RQDxXWoazdR3WyiuqGbUE+QHHcus65fROXEKTKsJAAJCXEZdXW2U3VoH3vefotQTw+2LDuuHM+ATXmQ6F2M8SR6FwXZ0rsYak1BlZOtJk62qDS3thGLRCkaVcqsGxYypqxSJqTFABIS4rLT4nFqT1Wz951t1J08jqIq5HjyztlrAYnNeaM9GqM9Gj6nLpPdV0hHSKGmzUxNm4mWjjBdHe0AlFdOYubs+RSXjJGlrOK8JCTEFdXe1kLVoX3s3bWdSDiEPcuBK8d93hOS3WxQ6o4z2qNRkK1LBdpLoBvQ2qPi7zRR32GiqUuns72VeCyGK8fDjOuup2LClHNKxQvxQRISYkjEYlFqTx5nz9vb8NedBCDLmY0z23XewLCYDEpyEj2M4hxN6kVdgHAcznSa8HeaaOg0EYoZdHW2EwmHMJssTLh6OldPn0nRqDHnDAEKkYyEhBhyne1t1J6q5siB3TTU12JgYLc7yHblnPfkpSoG+U6dQleih+F1SC8DEhvdEr2FRI+hpUdF03SCXR1EwmEURWHc+AlMmX4to8eOl4lo8ZFISIiU6g52UVdTzdHDe6mrqcYwDKxWG9k57qQTqCbFwJetk+/UyXdqeJ061hEw1xqOQUuPSkuPidYelZZulXAcIuEQwa5ODMPAZDIxtuwqKidOYUxZhSxfFZdMQkKkjVBPN/V1NVQd3seJ41UYuo6CQla2k6ws54cMkRh47AZep47bfvZm4LAO3z/tmJboJbScvXWr9MQSx69pGt1dnUTCIQDcuV6umjyNsWWVFBSNwmKxprLpIsNISIi0FI1ECDT68dfVUP3eEQJn/AAoKNgdDhxO5zn1oz7IrBp9gXE2PHLsBk6rkRaVa2MaBKMK3RGVYFQhGFEIRlW6IgpdEQVQMAyDWDRCqKeHSCSMqiioqokxZRVUTppKSek4XG6PrEwSV4yEhBgWIuEQgTN+zjTUUVP9Lmf8dei6DoaB2WLBZs/CZrNjMg++S09VDOxmA7vFwG7mffeNAfdtZgNVAQVQFBL3e79+kGFATIeYphDT+r9GdaX/vqbQ/b4wiMTPfaNYLEaop7uvl4Bh4HTlUDK6jNKx5fjyC/EVFElvQQwZCQkxLGnxOK0tAZoaG2hsqCfQWE9zoJF4PIaiKBi6jslsToSH3Y7ZfHkLSCkYAwIjricevRC6rhGNRolGIsSiETRN6+sJWG02SkrHMXpsOfmFo8jzFQzZvMLOnTu5//77qaio6HssNzeXJ5988pLe99e//jWzZ89m2rRpl9pEkQISEiJjGIZBd7CLzo5WOtrbaGpsIHCmnqZGP9FIBEVVUVDQDR3D0FFVFZPZgvnszWLGbLZc9NCNYRjouo6uaWi6hqbF0TW996uGFo+DoiTCyzBQVRW3x0uu14fXV0CuN5/s7Bzcud6ke0iGws6dO1m/fj1r1qxJyc8X6Ukq6IiMoSgK2b2XXB1VOo5JU2YAiZN4KNTTO4zTkxjfD4cIdnXR1dlGMNhJsLOD7mCQ9lALhqFztleQOF/33u9/oO99z361WCzYbFlYbXays3Ow2bPIcjiw2x24PXm4cty9bXOT5XAOmzmE1tZW7r77bl555RUURWHVqlXMnTuXMWPG8OMf/xgAj8fDY489xpEjR1i7di0Wi4XTp0+zZMkS7r33Xr7//e+zZMkSmpubefPNNwmHw9TW1rJ8+XKWLl3KgQMHWLVqFU6nE6/Xi81m44knnkjxkYuzJCRExlMUBYfDicPhHPS1uq5j6Hqit6EbGIaeeKy3t2AYOoaRGDIym81YLFbMFmvG1DvasWMH99xzT9+/FyxYwIQJE9i1axfTp0/n7bff5oc//CF33XUXjz32GBUVFWzYsIHf/OY3zJ07F7/fz4svvkg0GmXevHnce++9A94/GAzy9NNPU1NTw7e//W2WLl3KypUr+elPf0plZSVr1qyhsbFxqA9bfAgJCSHeR1VVUFUy45R/8WbPnn3OcNP27dvZuHEjTU1NLFy4ELPZTHV1NatWrQISk+1lZWUAXHXVVZjNZsxmM3b7uZWAJ06cCEBxcTHRaBSAQCBAZWUlADNnzuSVV165YscnLp6EhBDiQ82ZM4ef/exnNDY28vDDDwNQVlbGT37yE0aNGsXu3btpamoCGHQY7XzPFxUVcfz4cSoqKti/f//lPwBxSSQkhBB9PjjcBLB27VpuvfVWtm/fztixYwF45JFHePDBB9E0DYDVq1cTCAQ+0s9cuXIlP/jBD3A4HFgsFgoLCy/tIMRlJaubhBAp9eyzz7J48WLy8vJYs2YNFouFFStWpLpZopf0JIQQKeX1elm2bBkOhwOXyyUrm9KM9CSEEEIkJQWXhRBCJCUhIYQQIikJCSGEEElJSAghhEhKQkIIIURSEhJCCCGSkpAQQgiRlISEEEKIpCQkhBBCJCUhIYQQIikJCSGEEElJSAghhEhKQkIIIURSEhJCCCGSkpAQQgiRlISEEEKIpCQkhBBCJCUhIYQQIikJCSGEEElJSAghhEhKQkIIIURSEhJCCCGSkpAQQgiRlISEEEKIpCQkhBBCJPX/Qgnw2487lj0AAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_fareamount = random_rows.groupby('time_part_of_day')['fare_amount'].sum()\n",
    "plot = sum_fareamount.plot(kind ='pie', \n",
    "                    x = 'time_hour', \n",
    "                    y = 'fare_amount', \n",
    "                    title='Earning Share in Different times of the day', \n",
    "                    legend = False, \n",
    "                    figsize=(6,6), \n",
    "                    shadow=True, \n",
    "                    labels=[\"Late Night\", 'Morning', 'AfterNoon', 'Evening'],\n",
    "                    colors = ['#ff9f69','#99b3ff','#92ff99','#ffcf89'],\n",
    "                    explode = (0.04, 0.04, 0.04, .04),\n",
    "                    autopct='%1.1f%%')\n",
    "\n",
    "centre_circle = plt.Circle((0,0),0.70, fc = 'white')\n",
    "plt.gcf().gca().add_artist(centre_circle)\n",
    "\n",
    "plot.set_xlabel('')\n",
    "plot.set_ylabel('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_distance = random_rows.groupby('time_hour')['distance'].sum()\n",
    "plot = sum_distance.plot(kind ='line',\n",
    "                  x = 'time_hour', \n",
    "                  y = 'distance', \n",
    "                  title='Total Distance vs Time of day', \n",
    "                  figsize=(16,4))\n",
    "plot.set_xlabel(\"Hour of the day\")\n",
    "plot.set_ylabel(\"Total Distane\")\n",
    "_ = plot.set_xticks(range(0,24,1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_fare = random_rows.groupby('time_hour')['fare_amount'].sum()\n",
    "plot = sum_fare.plot(kind ='line',\n",
    "                  x = 'time_hour', \n",
    "                  y = 'fare_amount', \n",
    "                  title='Total Fare vs Time of day', \n",
    "                  figsize=(16,4))\n",
    "plot.set_xlabel(\"Hour of the day\")\n",
    "plot.set_ylabel(\"Fare AMount\")\n",
    "_ = plot.set_xticks(range(0,24,1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1152x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_distance = random_rows.groupby('time_hour')['distance'].sum()\n",
    "sum_fareamount = random_rows.groupby('time_hour')['fare_amount'].sum()\n",
    "\n",
    "sum_distance.plot(kind ='line', x = 'time_hour', y = 'distance', legend = True)\n",
    "plot = sum_fareamount.plot(kind ='line', x = 'time_hour', y = 'fare_amount', \n",
    "                    figsize=(16,4), \n",
    "                    title=\"Total Fare Amount and Total Distance Travelled per Hour (Log relation)\",\n",
    "                    legend = True,\n",
    "                    logy= True, color='Red')\n",
    "plot.set_xlabel(\"Hour of the day\")\n",
    "plot.set_ylabel(\"Total Fare/Total Distane\")\n",
    "_ = plot.set_xticks(range(0,24,1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Reference :  https://stackoverflow.com/questions/11927715/how-to-give-a-pandas-matplotlib-bar-graph-custom-colors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>10.017088</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>9.848972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>10.309377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>11.468890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>12.251040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>12.492615</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>13.230117</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      fare_amount\n",
       "year             \n",
       "2009    10.017088\n",
       "2010     9.848972\n",
       "2011    10.309377\n",
       "2012    11.468890\n",
       "2013    12.251040\n",
       "2014    12.492615\n",
       "2015    13.230117"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1008x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "year_fare_mean = pandas.DataFrame(random_rows.groupby('year')['fare_amount'].mean().astype(np.float32),\n",
    "                                 pandas.Series(range(2009,2016), name=\"year\"))\n",
    "\n",
    "display(year_fare_mean)\n",
    "plot = year_fare_mean.plot(kind = 'line',\n",
    "                stacked=True, \n",
    "                color = cm.inferno_r(np.linspace(.6,.9, 24)), \n",
    "                legend=False, \n",
    "                figsize=(14,6),\n",
    "                title=\"Mean Fare Amount per Year\")\n",
    "plot.set_xlabel(\"Years\")\n",
    "_ = plot.set_ylabel(\"Mean Fare\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sum_pickup = pandas.DataFrame()\n",
    "sum_pickup['time_hour'] = pandas.Series(range(0,24))\n",
    "sum_pickup['pickup_count'] = random_rows.time_hour.value_counts().astype(np.int)\n",
    "sum_pickup = sum_pickup.filter(['pickup_count', 'time_hour'])\n",
    "plot = sum_pickup.plot(kind = 'bar',\n",
    "                x = 'time_hour',\n",
    "                y = 'pickup_count',\n",
    "                stacked=True,\n",
    "                color = cm.inferno_r(np.linspace(.3,.5, 24)), \n",
    "                figsize=(15,5),\n",
    "                title=\"Pickup Counts/ Hour of the day\" )\n",
    "plot.set_xlabel(\"Hours\")\n",
    "_ = plot.set_ylabel(\"Pick Up Counts\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>New generated Features</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.639764</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2.584861</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.7</td>\n",
       "      <td>2</td>\n",
       "      <td>1.037366</td>\n",
       "      <td>17</td>\n",
       "      <td>2011</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.007130</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.997993</td>\n",
       "      <td>17</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fare_amount  passenger_count  distance  time_hour  year  time_part_of_day  \\\n",
       "0          4.5                1  0.639764         17  2009                 4   \n",
       "1         16.5                1  2.584861         17  2012                 4   \n",
       "2          7.7                2  1.037366         17  2011                 4   \n",
       "3          7.5                1  1.007130         17  2012                 4   \n",
       "4         13.5                1  1.997993         17  2013                 4   \n",
       "\n",
       "   pickup_count  \n",
       "0           452  \n",
       "1           452  \n",
       "2           452  \n",
       "3           452  \n",
       "4           452  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cleaned_csv = pandas.read_csv('cleaned_data.csv')\n",
    "cleaned_csv['time_part_of_day'] = pandas.cut(cleaned_csv['time_hour'], \n",
    "                                             [-1, 6, 12, 16 ,24], \n",
    "                                             labels = [1, 2, 3, 4]).astype(int)\n",
    "feature_csv = pandas.merge(cleaned_csv, \n",
    "                           sum_pickup[['time_hour','pickup_count']], \n",
    "                           on='time_hour')\n",
    "\n",
    "feature_csv = feature_csv.filter(['fare_amount', \n",
    "                            'passenger_count', \n",
    "                            'distance', \n",
    "                            'time_hour', \n",
    "                            'year', \n",
    "                            'time_part_of_day', \n",
    "                            'pickup_count',\n",
    "                            ], axis=1)\n",
    "\n",
    "display(feature_csv.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2>Correlation Heatmap of the new features</h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.639764</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2.584861</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.7</td>\n",
       "      <td>2</td>\n",
       "      <td>1.037366</td>\n",
       "      <td>17</td>\n",
       "      <td>2011</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.007130</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.997993</td>\n",
       "      <td>17</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fare_amount  passenger_count  distance  time_hour  year  time_part_of_day  \\\n",
       "0          4.5                1  0.639764         17  2009                 4   \n",
       "1         16.5                1  2.584861         17  2012                 4   \n",
       "2          7.7                2  1.037366         17  2011                 4   \n",
       "3          7.5                1  1.007130         17  2012                 4   \n",
       "4         13.5                1  1.997993         17  2013                 4   \n",
       "\n",
       "   pickup_count  \n",
       "0           452  \n",
       "1           452  \n",
       "2           452  \n",
       "3           452  \n",
       "4           452  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pearson_corr = feature_csv.corr(method='pearson')\n",
    "display(feature_csv.head())\n",
    "labels = [[ 'fare_amount', 'passenger_count', 'distance', 'time_hour',\n",
    "                'year', 'time_part_of_day', 'pickup_count']]\n",
    "\n",
    "seaborn.heatmap(pearson_corr, \n",
    "                cmap=seaborn.color_palette(\"RdBu_r\", 7), \n",
    "            linewidths=.1, \n",
    "            annot=True)\n",
    "plt.gcf().set_size_inches(12,8)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Baseline model: Linear Regression</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = feature_csv[['distance', 'time_part_of_day', 'year']]\n",
    "Y = feature_csv[['fare_amount']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7717943, 3) (7717943, 1)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)\n",
    "print(X_train.shape, Y_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "metadata": {},
   "outputs": [],
   "source": [
    "baseline = linear_model.LinearRegression()\n",
    "baseline_model = baseline.fit(X_train, Y_train)\n",
    "predictions = baseline.predict(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h2><i>Generate Baseline Model Scores</i></h2>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0,0.5,'Predictions')"
      ]
     },
     "execution_count": 296,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(Y_test, predictions)\n",
    "plt.xlabel(\"True Values\")\n",
    "plt.ylabel(\"Predictions\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy: 77.0% \tRMS Error: 20.936110128423508\n"
     ]
    }
   ],
   "source": [
    "print(\"Accuracy: \"+str((baseline_model.score(X_test, Y_test)*100).round())+\"%\", \n",
    "      \"\\tRMS Error: \" + str(mean_squared_error(Y_test, predictions)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Advanced model: Using Random Forest Regressor</h1>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Reference: https://stackoverflow.com/questions/41925157/logisticregression-unknown-label-type-continuous-using-sklearn-in-python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance</th>\n",
       "      <th>year</th>\n",
       "      <th>time_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.639764</td>\n",
       "      <td>2009</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.584861</td>\n",
       "      <td>2012</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.037366</td>\n",
       "      <td>2011</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.007130</td>\n",
       "      <td>2012</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.997993</td>\n",
       "      <td>2013</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   distance  year  time_hour\n",
       "0  0.639764  2009         17\n",
       "1  2.584861  2012         17\n",
       "2  1.037366  2011         17\n",
       "3  1.007130  2012         17\n",
       "4  1.997993  2013         17"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([ 4.5, 16.5,  7.7, ...,  3.7, 14.5,  7. ])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#X = feature_csv[['passenger_count', 'distance', 'time_hour', 'time_part_of_day', 'pickup_count']]\n",
    "feature_csv = feature_csv[(feature_csv.fare_amount / feature_csv.distance) >= 1]\n",
    "feature_csv = feature_csv[(feature_csv.fare_amount / feature_csv.distance) <= 23]\n",
    "X = feature_csv[['distance', 'year', 'time_hour']]\n",
    "Y = feature_csv[['fare_amount']].values.ravel()\n",
    "display(X.head())\n",
    "display(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(7575453, 3) (7575453,)\n"
     ]
    }
   ],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)\n",
    "print(X_train.shape, Y_train.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = RandomForestRegressor(n_estimators=15, \n",
    "                            max_features=3, \n",
    "                            max_depth=20, \n",
    "                            min_samples_split=3, \n",
    "                            min_samples_leaf=2, \n",
    "                            random_state=0)\n",
    "model = clf.fit(X_train, Y_train)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction = clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8772049616369659\n"
     ]
    }
   ],
   "source": [
    "print(model.score(X_test, Y_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>External Database- Fuel Prices with Random Forest and Gradient Boosting</h1>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "https://www.eia.gov/dnav/pet/hist/LeafHandler.ashx?n=pet&s=emm_epm0_pte_nus_dpg&f=m"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [],
   "source": [
    "fuel_price = pandas.read_csv('FuelPrices.csv', header = None, names = ['Date', 'Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sep 2018</td>\n",
       "      <td>2.915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Aug 2018</td>\n",
       "      <td>2.914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Jul 2018</td>\n",
       "      <td>2.928</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Jun 2018</td>\n",
       "      <td>2.970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>May 2018</td>\n",
       "      <td>2.987</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Date  Price\n",
       "0  Sep 2018  2.915\n",
       "1  Aug 2018  2.914\n",
       "2  Jul 2018  2.928\n",
       "3  Jun 2018  2.970\n",
       "4  May 2018  2.987"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(fuel_price.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [],
   "source": [
    "fuel_price['year'] = pandas.to_datetime(fuel_price.Date).apply(lambda x : x.year)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [],
   "source": [
    "fuel_price = fuel_price.groupby('year').mean()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>1.070778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>1.077833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>1.156667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>1.244500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>1.245000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>1.072250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>1.175167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000</th>\n",
       "      <td>1.524500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001</th>\n",
       "      <td>1.466167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>1.381833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>1.601083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>1.891250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>2.312167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>2.615083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>2.845500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>3.305083</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2009</th>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2010</th>\n",
       "      <td>2.833583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2011</th>\n",
       "      <td>3.576417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>3.686167</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>3.576417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>3.442000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>2.513000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>2.252500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>2.530333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>2.852444</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Price\n",
       "year          \n",
       "1993  1.070778\n",
       "1994  1.077833\n",
       "1995  1.156667\n",
       "1996  1.244500\n",
       "1997  1.245000\n",
       "1998  1.072250\n",
       "1999  1.175167\n",
       "2000  1.524500\n",
       "2001  1.466167\n",
       "2002  1.381833\n",
       "2003  1.601083\n",
       "2004  1.891250\n",
       "2005  2.312167\n",
       "2006  2.615083\n",
       "2007  2.845500\n",
       "2008  3.305083\n",
       "2009  2.396667\n",
       "2010  2.833583\n",
       "2011  3.576417\n",
       "2012  3.686167\n",
       "2013  3.576417\n",
       "2014  3.442000\n",
       "2015  2.513000\n",
       "2016  2.252500\n",
       "2017  2.530333\n",
       "2018  2.852444"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(fuel_price)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.639764</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>16.5</td>\n",
       "      <td>1</td>\n",
       "      <td>2.584861</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7.7</td>\n",
       "      <td>2</td>\n",
       "      <td>1.037366</td>\n",
       "      <td>17</td>\n",
       "      <td>2011</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.007130</td>\n",
       "      <td>17</td>\n",
       "      <td>2012</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>13.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.997993</td>\n",
       "      <td>17</td>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fare_amount  passenger_count  distance  time_hour  year  time_part_of_day  \\\n",
       "0          4.5                1  0.639764         17  2009                 4   \n",
       "1         16.5                1  2.584861         17  2012                 4   \n",
       "2          7.7                2  1.037366         17  2011                 4   \n",
       "3          7.5                1  1.007130         17  2012                 4   \n",
       "4         13.5                1  1.997993         17  2013                 4   \n",
       "\n",
       "   pickup_count  \n",
       "0           452  \n",
       "1           452  \n",
       "2           452  \n",
       "3           452  \n",
       "4           452  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(feature_csv.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0.639764</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10.9</td>\n",
       "      <td>1</td>\n",
       "      <td>2.338527</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8.7</td>\n",
       "      <td>4</td>\n",
       "      <td>1.966338</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.5</td>\n",
       "      <td>1</td>\n",
       "      <td>1.458667</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.1</td>\n",
       "      <td>1</td>\n",
       "      <td>0.544204</td>\n",
       "      <td>17</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>452</td>\n",
       "      <td>2.396667</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   fare_amount  passenger_count  distance  time_hour  year  time_part_of_day  \\\n",
       "0          4.5                1  0.639764         17  2009                 4   \n",
       "1         10.9                1  2.338527         17  2009                 4   \n",
       "2          8.7                4  1.966338         17  2009                 4   \n",
       "3          8.5                1  1.458667         17  2009                 4   \n",
       "4          4.1                1  0.544204         17  2009                 4   \n",
       "\n",
       "   pickup_count     Price  \n",
       "0           452  2.396667  \n",
       "1           452  2.396667  \n",
       "2           452  2.396667  \n",
       "3           452  2.396667  \n",
       "4           452  2.396667  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "new_feature_csv = pandas.merge(feature_csv, \n",
    "                           fuel_price, \n",
    "                           on=['year'])\n",
    "display(new_feature_csv.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fare_amount</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>fare_amount</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.015970</td>\n",
       "      <td>0.919599</td>\n",
       "      <td>-0.017185</td>\n",
       "      <td>0.123149</td>\n",
       "      <td>-0.021076</td>\n",
       "      <td>-0.037429</td>\n",
       "      <td>0.047060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>passenger_count</th>\n",
       "      <td>0.015970</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.011765</td>\n",
       "      <td>0.016469</td>\n",
       "      <td>0.004640</td>\n",
       "      <td>0.017995</td>\n",
       "      <td>0.011779</td>\n",
       "      <td>0.002490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>distance</th>\n",
       "      <td>0.919599</td>\n",
       "      <td>0.011765</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.031084</td>\n",
       "      <td>0.022472</td>\n",
       "      <td>-0.035415</td>\n",
       "      <td>-0.072963</td>\n",
       "      <td>0.017753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time_hour</th>\n",
       "      <td>-0.017185</td>\n",
       "      <td>0.016469</td>\n",
       "      <td>-0.031084</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.000184</td>\n",
       "      <td>0.958960</td>\n",
       "      <td>0.775961</td>\n",
       "      <td>-0.002932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <td>0.123149</td>\n",
       "      <td>0.004640</td>\n",
       "      <td>0.022472</td>\n",
       "      <td>-0.000184</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.001908</td>\n",
       "      <td>-0.001751</td>\n",
       "      <td>0.446200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time_part_of_day</th>\n",
       "      <td>-0.021076</td>\n",
       "      <td>0.017995</td>\n",
       "      <td>-0.035415</td>\n",
       "      <td>0.958960</td>\n",
       "      <td>-0.001908</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.809664</td>\n",
       "      <td>-0.003957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pickup_count</th>\n",
       "      <td>-0.037429</td>\n",
       "      <td>0.011779</td>\n",
       "      <td>-0.072963</td>\n",
       "      <td>0.775961</td>\n",
       "      <td>-0.001751</td>\n",
       "      <td>0.809664</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.003064</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Price</th>\n",
       "      <td>0.047060</td>\n",
       "      <td>0.002490</td>\n",
       "      <td>0.017753</td>\n",
       "      <td>-0.002932</td>\n",
       "      <td>0.446200</td>\n",
       "      <td>-0.003957</td>\n",
       "      <td>-0.003064</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  fare_amount  passenger_count  distance  time_hour      year  \\\n",
       "fare_amount          1.000000         0.015970  0.919599  -0.017185  0.123149   \n",
       "passenger_count      0.015970         1.000000  0.011765   0.016469  0.004640   \n",
       "distance             0.919599         0.011765  1.000000  -0.031084  0.022472   \n",
       "time_hour           -0.017185         0.016469 -0.031084   1.000000 -0.000184   \n",
       "year                 0.123149         0.004640  0.022472  -0.000184  1.000000   \n",
       "time_part_of_day    -0.021076         0.017995 -0.035415   0.958960 -0.001908   \n",
       "pickup_count        -0.037429         0.011779 -0.072963   0.775961 -0.001751   \n",
       "Price                0.047060         0.002490  0.017753  -0.002932  0.446200   \n",
       "\n",
       "                  time_part_of_day  pickup_count     Price  \n",
       "fare_amount              -0.021076     -0.037429  0.047060  \n",
       "passenger_count           0.017995      0.011779  0.002490  \n",
       "distance                 -0.035415     -0.072963  0.017753  \n",
       "time_hour                 0.958960      0.775961 -0.002932  \n",
       "year                     -0.001908     -0.001751  0.446200  \n",
       "time_part_of_day          1.000000      0.809664 -0.003957  \n",
       "pickup_count              0.809664      1.000000 -0.003064  \n",
       "Price                    -0.003957     -0.003064  1.000000  "
      ]
     },
     "execution_count": 176,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_feature_csv.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance</th>\n",
       "      <th>year</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>Price</th>\n",
       "      <th>time_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.639764</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "      <td>2.396667</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.338527</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "      <td>2.396667</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.966338</td>\n",
       "      <td>2009</td>\n",
       "      <td>4</td>\n",
       "      <td>2.396667</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.458667</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "      <td>2.396667</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.544204</td>\n",
       "      <td>2009</td>\n",
       "      <td>1</td>\n",
       "      <td>2.396667</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   distance  year  passenger_count     Price  time_hour\n",
       "0  0.639764  2009                1  2.396667         17\n",
       "1  2.338527  2009                1  2.396667         17\n",
       "2  1.966338  2009                4  2.396667         17\n",
       "3  1.458667  2009                1  2.396667         17\n",
       "4  0.544204  2009                1  2.396667         17"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "array([ 4.5, 10.9,  8.7, ..., 10. ,  6.5, 15.5])"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# new_feature_csv = new_feature_csv[(new_feature_csv.fare_amount / new_feature_csv.distance) >= 1]\n",
    "# new_feature_csv = new_feature_csv[(new_feature_csv.fare_amount / new_feature_csv.distance) <= 25]\n",
    "X = new_feature_csv[['distance', 'year', 'passenger_count', 'Price', 'time_hour']]\n",
    "Y = new_feature_csv[['fare_amount']].values.ravel()\n",
    "display(X.head())\n",
    "display(Y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "metadata": {},
   "outputs": [],
   "source": [
    "clf = RandomForestRegressor(n_estimators=15, \n",
    "                            max_depth=20, \n",
    "                            min_samples_split=3, \n",
    "                            min_samples_leaf=2, \n",
    "                            random_state=0)\n",
    "model = clf.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction = clf.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8741467877580087\n"
     ]
    }
   ],
   "source": [
    "print(model.score(X_test, Y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10.919002173148131\n"
     ]
    }
   ],
   "source": [
    "print(mean_squared_error(Y_test, prediction))"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Trying Gradient Boosting Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [],
   "source": [
    "gbrt = GradientBoostingRegressor(n_estimators=100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [],
   "source": [
    "gbrt_model = gbrt.fit(X_train, Y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [],
   "source": [
    "pred = gbrt.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.8779263687484755\n"
     ]
    }
   ],
   "source": [
    "print(gbrt_model.score(X_test, Y_test))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10.591086402757279\n"
     ]
    }
   ],
   "source": [
    "print(mean_squared_error(Y_test, pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Create submission file</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>pickup_datetime</th>\n",
       "      <th>pickup_longitude</th>\n",
       "      <th>pickup_latitude</th>\n",
       "      <th>dropoff_longitude</th>\n",
       "      <th>dropoff_latitude</th>\n",
       "      <th>passenger_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-27 13:08:24.0000002</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.973320</td>\n",
       "      <td>40.763805</td>\n",
       "      <td>-73.981430</td>\n",
       "      <td>40.743835</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-01-27 13:08:24.0000003</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.986862</td>\n",
       "      <td>40.719383</td>\n",
       "      <td>-73.998886</td>\n",
       "      <td>40.739201</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2011-10-08 11:53:44.0000002</td>\n",
       "      <td>2011-10-08 11:53:44 UTC</td>\n",
       "      <td>-73.982524</td>\n",
       "      <td>40.751260</td>\n",
       "      <td>-73.979654</td>\n",
       "      <td>40.746139</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-12-01 21:12:12.0000002</td>\n",
       "      <td>2012-12-01 21:12:12 UTC</td>\n",
       "      <td>-73.981160</td>\n",
       "      <td>40.767807</td>\n",
       "      <td>-73.990448</td>\n",
       "      <td>40.751635</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-12-01 21:12:12.0000003</td>\n",
       "      <td>2012-12-01 21:12:12 UTC</td>\n",
       "      <td>-73.966046</td>\n",
       "      <td>40.789775</td>\n",
       "      <td>-73.988565</td>\n",
       "      <td>40.744427</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           key          pickup_datetime  pickup_longitude  \\\n",
       "0  2015-01-27 13:08:24.0000002  2015-01-27 13:08:24 UTC        -73.973320   \n",
       "1  2015-01-27 13:08:24.0000003  2015-01-27 13:08:24 UTC        -73.986862   \n",
       "2  2011-10-08 11:53:44.0000002  2011-10-08 11:53:44 UTC        -73.982524   \n",
       "3  2012-12-01 21:12:12.0000002  2012-12-01 21:12:12 UTC        -73.981160   \n",
       "4  2012-12-01 21:12:12.0000003  2012-12-01 21:12:12 UTC        -73.966046   \n",
       "\n",
       "   pickup_latitude  dropoff_longitude  dropoff_latitude  passenger_count  \n",
       "0        40.763805         -73.981430         40.743835                1  \n",
       "1        40.719383         -73.998886         40.739201                1  \n",
       "2        40.751260         -73.979654         40.746139                1  \n",
       "3        40.767807         -73.990448         40.751635                1  \n",
       "4        40.789775         -73.988565         40.744427                1  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kaggle_sub = pandas.read_csv('all/test.csv')\n",
    "display(kaggle_sub.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>pickup_datetime</th>\n",
       "      <th>pickup_longitude</th>\n",
       "      <th>pickup_latitude</th>\n",
       "      <th>dropoff_longitude</th>\n",
       "      <th>dropoff_latitude</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-27 13:08:24.0000002</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.973320</td>\n",
       "      <td>40.763805</td>\n",
       "      <td>-73.981430</td>\n",
       "      <td>40.743835</td>\n",
       "      <td>1</td>\n",
       "      <td>1.442197</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-01-27 13:08:24.0000003</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.986862</td>\n",
       "      <td>40.719383</td>\n",
       "      <td>-73.998886</td>\n",
       "      <td>40.739201</td>\n",
       "      <td>1</td>\n",
       "      <td>1.506081</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015-01-29 13:15:50.0000003</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-73.983482</td>\n",
       "      <td>40.760513</td>\n",
       "      <td>-73.973831</td>\n",
       "      <td>40.783016</td>\n",
       "      <td>1</td>\n",
       "      <td>1.633223</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015-01-29 13:15:50.0000004</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-74.003738</td>\n",
       "      <td>40.725365</td>\n",
       "      <td>-73.991501</td>\n",
       "      <td>40.729626</td>\n",
       "      <td>1</td>\n",
       "      <td>0.706485</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2015-01-29 13:15:50.0000007</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-73.976959</td>\n",
       "      <td>40.756039</td>\n",
       "      <td>-73.959709</td>\n",
       "      <td>40.770969</td>\n",
       "      <td>1</td>\n",
       "      <td>1.371324</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           key          pickup_datetime  pickup_longitude  \\\n",
       "0  2015-01-27 13:08:24.0000002  2015-01-27 13:08:24 UTC        -73.973320   \n",
       "1  2015-01-27 13:08:24.0000003  2015-01-27 13:08:24 UTC        -73.986862   \n",
       "2  2015-01-29 13:15:50.0000003  2015-01-29 13:15:50 UTC        -73.983482   \n",
       "3  2015-01-29 13:15:50.0000004  2015-01-29 13:15:50 UTC        -74.003738   \n",
       "4  2015-01-29 13:15:50.0000007  2015-01-29 13:15:50 UTC        -73.976959   \n",
       "\n",
       "   pickup_latitude  dropoff_longitude  dropoff_latitude  passenger_count  \\\n",
       "0        40.763805         -73.981430         40.743835                1   \n",
       "1        40.719383         -73.998886         40.739201                1   \n",
       "2        40.760513         -73.973831         40.783016                1   \n",
       "3        40.725365         -73.991501         40.729626                1   \n",
       "4        40.756039         -73.959709         40.770969                1   \n",
       "\n",
       "   distance  time_hour  year  time_part_of_day  pickup_count  Price  \n",
       "0  1.442197         13  2015                 3           456  2.513  \n",
       "1  1.506081         13  2015                 3           456  2.513  \n",
       "2  1.633223         13  2015                 3           456  2.513  \n",
       "3  0.706485         13  2015                 3           456  2.513  \n",
       "4  1.371324         13  2015                 3           456  2.513  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kaggle_sub['distance'] = kaggle_sub[['pickup_latitude',\n",
    "                               'pickup_longitude',\n",
    "                               'dropoff_latitude',\n",
    "                               'dropoff_longitude']\n",
    "                             ].apply(lambda x: get_distance((x[0], x[1]), (x[2], x[3])), axis=1).astype(np.float32)\n",
    "    \n",
    "\n",
    "kaggle_sub['time_hour'] = pandas.to_datetime(\n",
    "        kaggle_sub['pickup_datetime'].apply(lambda x: x.split()[1]), \n",
    "        format='%H:%M:%S'\n",
    "    ).dt.hour\n",
    "    \n",
    "kaggle_sub['year'] = pandas.to_datetime(\n",
    "        kaggle_sub['pickup_datetime'].apply(lambda x: x.split()[0]), \n",
    "        format='%Y-%m-%d'\n",
    "    ).dt.year.astype(int)\n",
    "\n",
    "kaggle_sub['time_part_of_day'] = pandas.cut(kaggle_sub['time_hour'], \n",
    "                                             [-1, 6, 12, 16 ,24], \n",
    "                                             labels = [1, 2, 3, 4]).astype(int)\n",
    "kaggle_sub = pandas.merge(kaggle_sub, \n",
    "                           sum_pickup[['time_hour','pickup_count']], \n",
    "                           on='time_hour')\n",
    "\n",
    "kaggle_sub = pandas.merge(kaggle_sub, \n",
    "                           fuel_price, \n",
    "                           on=['year'])\n",
    "display(kaggle_sub.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>distance</th>\n",
       "      <th>year</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>Price</th>\n",
       "      <th>time_hour</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.442197</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "      <td>2.513</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.506081</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "      <td>2.513</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1.633223</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "      <td>2.513</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.706485</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "      <td>2.513</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.371324</td>\n",
       "      <td>2015</td>\n",
       "      <td>1</td>\n",
       "      <td>2.513</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   distance  year  passenger_count  Price  time_hour\n",
       "0  1.442197  2015                1  2.513         13\n",
       "1  1.506081  2015                1  2.513         13\n",
       "2  1.633223  2015                1  2.513         13\n",
       "3  0.706485  2015                1  2.513         13\n",
       "4  1.371324  2015                1  2.513         13"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_kaggle = kaggle_sub[['distance', 'year', 'passenger_count', 'Price', 'time_hour']]\n",
    "display(X_kaggle.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [],
   "source": [
    "prediction = gbrt.predict(X_kaggle)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>key</th>\n",
       "      <th>pickup_datetime</th>\n",
       "      <th>pickup_longitude</th>\n",
       "      <th>pickup_latitude</th>\n",
       "      <th>dropoff_longitude</th>\n",
       "      <th>dropoff_latitude</th>\n",
       "      <th>passenger_count</th>\n",
       "      <th>distance</th>\n",
       "      <th>time_hour</th>\n",
       "      <th>year</th>\n",
       "      <th>time_part_of_day</th>\n",
       "      <th>pickup_count</th>\n",
       "      <th>Price</th>\n",
       "      <th>fare_amount</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-01-27 13:08:24.0000002</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.973320</td>\n",
       "      <td>40.763805</td>\n",
       "      <td>-73.981430</td>\n",
       "      <td>40.743835</td>\n",
       "      <td>1</td>\n",
       "      <td>1.442197</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "      <td>10.346408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-01-27 13:08:24.0000003</td>\n",
       "      <td>2015-01-27 13:08:24 UTC</td>\n",
       "      <td>-73.986862</td>\n",
       "      <td>40.719383</td>\n",
       "      <td>-73.998886</td>\n",
       "      <td>40.739201</td>\n",
       "      <td>1</td>\n",
       "      <td>1.506081</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "      <td>10.771849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015-01-29 13:15:50.0000003</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-73.983482</td>\n",
       "      <td>40.760513</td>\n",
       "      <td>-73.973831</td>\n",
       "      <td>40.783016</td>\n",
       "      <td>1</td>\n",
       "      <td>1.633223</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "      <td>11.525397</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015-01-29 13:15:50.0000004</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-74.003738</td>\n",
       "      <td>40.725365</td>\n",
       "      <td>-73.991501</td>\n",
       "      <td>40.729626</td>\n",
       "      <td>1</td>\n",
       "      <td>0.706485</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "      <td>6.927242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2015-01-29 13:15:50.0000007</td>\n",
       "      <td>2015-01-29 13:15:50 UTC</td>\n",
       "      <td>-73.976959</td>\n",
       "      <td>40.756039</td>\n",
       "      <td>-73.959709</td>\n",
       "      <td>40.770969</td>\n",
       "      <td>1</td>\n",
       "      <td>1.371324</td>\n",
       "      <td>13</td>\n",
       "      <td>2015</td>\n",
       "      <td>3</td>\n",
       "      <td>456</td>\n",
       "      <td>2.513</td>\n",
       "      <td>10.042514</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           key          pickup_datetime  pickup_longitude  \\\n",
       "0  2015-01-27 13:08:24.0000002  2015-01-27 13:08:24 UTC        -73.973320   \n",
       "1  2015-01-27 13:08:24.0000003  2015-01-27 13:08:24 UTC        -73.986862   \n",
       "2  2015-01-29 13:15:50.0000003  2015-01-29 13:15:50 UTC        -73.983482   \n",
       "3  2015-01-29 13:15:50.0000004  2015-01-29 13:15:50 UTC        -74.003738   \n",
       "4  2015-01-29 13:15:50.0000007  2015-01-29 13:15:50 UTC        -73.976959   \n",
       "\n",
       "   pickup_latitude  dropoff_longitude  dropoff_latitude  passenger_count  \\\n",
       "0        40.763805         -73.981430         40.743835                1   \n",
       "1        40.719383         -73.998886         40.739201                1   \n",
       "2        40.760513         -73.973831         40.783016                1   \n",
       "3        40.725365         -73.991501         40.729626                1   \n",
       "4        40.756039         -73.959709         40.770969                1   \n",
       "\n",
       "   distance  time_hour  year  time_part_of_day  pickup_count  Price  \\\n",
       "0  1.442197         13  2015                 3           456  2.513   \n",
       "1  1.506081         13  2015                 3           456  2.513   \n",
       "2  1.633223         13  2015                 3           456  2.513   \n",
       "3  0.706485         13  2015                 3           456  2.513   \n",
       "4  1.371324         13  2015                 3           456  2.513   \n",
       "\n",
       "   fare_amount  \n",
       "0    10.346408  \n",
       "1    10.771849  \n",
       "2    11.525397  \n",
       "3     6.927242  \n",
       "4    10.042514  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "(9914, 14)"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "kaggle_sub['fare_amount'] = pandas.DataFrame(prediction)\n",
    "display(kaggle_sub.head())\n",
    "display(kaggle_sub.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [],
   "source": [
    "kaggle_sub.to_csv(\"kaggle.csv\", columns = ['key','fare_amount'], mode='a', index = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Coefficient for Baseline Model</h1>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 303,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[3.73865188, 0.07383756, 0.50672145]])"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "baseline_model.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
